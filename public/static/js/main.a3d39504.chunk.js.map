{"version":3,"sources":["components/ImageUploader.js","actions/registerSubscription.js","actions/unregisterSubscription.js","notificationHelper.js","url.js","containers/Loading.js","containers/GrayBubbleButton.js","components/NewGroupForm.js","containers/GreenBubbleButton.js","App.js","actions/keepAlive.js","actions/createGroup.js","actions/updateGroup.js","actions/deleteGroup.js","actions/requestInvitation.js","actions/getGroupData.js","components/UserGroups.js","actions/getGame.js","actions/createGame.js","actions/updateGame.js","actions/deleteGame.js","CONSTS.js","sizes.js","components/ImageSlider.js","components/GameData.js","containers/WhoOwesWho.js","components/GameSummary.js","actions/deleteImage.js","components/ImageData.js","actions/postImage.js","components/ImagesTab.js","components/OnGoingGame.js","components/NewGameForm.js","components/EditGameForm.js","containers/ShowAlert.js","components/GamesTab.js","actions/createPlayer.js","actions/updatePlayer.js","actions/deletePlayer.js","components/PlayerSummary.js","components/PlayersTab.js","components/GroupPage.js","actions/login.js","components/Login.js","index.js","containers/RedBubbleButton.js","containers/ShowErrorAlert.js","containers/ShowSuccessAlert.js"],"names":["ImageUploader","props","onReaderLoad","e","setState","image","target","result","readURL","preventDefault","files","reader","FileReader","onload","readAsDataURL","uploadImage","updateImage","remoteUploadImage","close","state","tags","playerIds","groupIds","gameIds","uploading","then","imageObject","showSuccess","setTimeout","catch","showError","handleNewPlayerChange","taggedPlayerId","removePlayerTag","playerId","filter","id","tagPlayer","push","group","availablePlayersToTag","players","p","includes","length","initialState","gameId","game","games","find","g","playersData","this","groupName","gameDate","tagedPlayers","name","date","AsGameName","map","onClick","tagPlayers","setImmediate","comboVals","player","value","onChange","className","disabled","type","accept","alt","src","message","Component","data","provider","token","a","Promise","resolve","reject","options","url","URL_PREFIX","method","body","JSON","stringify","headers","console","log","request","error","response","statusCode","bodyObj","parse","title","userContextString","userContext","decodeURI","registerSubscription","unregisterSubscription","isSubscribed","swRegistration","pushSupported","subscription","localStorage","getItem","setItem","removeItem","navigator","window","serviceWorker","register","swReg","warn","IsSubscribed","IsPushSupported","subscribeUser","applicationServerKey","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlB64ToUint8Array","pushManager","subscribe","userVisibleOnly","updateSubscriptionOnServer","unsubscribeUser","getSubscription","updateUnsubscriptionOnServer","unsubscribe","location","origin","Loader","heart","spade","diamond","club","version","GrayBubbleButton","classList","remove","add","children","NewGroupForm","handleGroupItemChange","attributeName","newValue","cancel","showMenu","onCancel","logout","delete","getHeader","menuItems","update","menuIcon","fontSize","anchorEl","document","getElementById","keepMounted","open","onClose","description","isUpdate","header","isLegalGroup","placeholder","saveGroup","deleteGroup","GreenBubbleButton","notificationHelper","Date","prototype","stringValue","toISOString","substr","day","month","year","AsExactTime","String","hours","moment","toDate","App","onNotificationButtonClick","subscribed","isAuthenticated","user","events","createGroup","showGroupCreationForm","showGroupEditForm","onFailure","backToMainPage","onLogin","groups","loading","setInterval","keepAlive","updateExistingGroup","updateGroup","newGroup","createNewGroup","delGroup","groupId","confirm","deletedGroupId","goHome","showGroupPage","showGroup","userInGroup","getGroupData","balance","gamesCount","play","cashOut","buyIn","sort","b","invitationRequested","alert","requestInvitation","editGroup","createGame","showCreateGameForm","createPlayer","showCreatePlayerForm","updatePlayerData","exist","updatePlayerRemoved","updateGame","removeGame","images","im","removeImage","imageId","answer","requestedGroupId","playersOptions","gamesOptions","imagesOptions","results","introJs","require","UserGroups","getImage","imageIndex","imagesCount","getGroupsDiv","showAddGroupItem","groupsItems","style","backgroundImage","imageUrl","borderRadiusTop","isAdmin","playersCount","getUserGroupsDiv","myGroups","getOtherGroupsDiv","otherGroups","onKeyChange","tabKey","clearGamesTabSelections","start","isMobile","test","userAgent","defaultActiveKey","activeKey","onSelect","variant","eventKey","getGame","gameData","deleteGame","getElementsByTagName","Width","innerWidth","documentElement","clientWidth","Height","innerHeight","clientHeight","SmartPhone","ImageSlider","index","relevantImages","items","taggedGame","taggedPlayers","join","original","thumbnail","sizes","ref","colors","ANON_URL","CONSTS","GREEN","RED","TRANSPARENT","Size","GameData","createPlayersDataAsFakeGame","max","minIndex","maxIndex","showSummaryByMoney","balances","totalGamesCounts","fourMonthMinIndex","sortedGames","slice","forEach","hasOwnProperty","mvpPlayerId","playersCountText","Object","keys","lastFourMonthGamesCount","percentage","undefined","Math","floor","item","prop","yearsObject","getYear","to","from","sliderValues","min","Game","IsGroupSummary","isPlaying","playerInfo","playerWidth","margin","isLoggedInPlayer","isMe","key","imgWidth","ImgStyleObject","width","height","marginRight","border","playerName","onError","ev","secondTry","first","playerData","displayName","trim","indexOf","split","styleObject","newSliderValues","playersInfo","playerObject","dif","val","d","hasNegatives","PlayerImages","getPlayerImage","PlayerNames1","getNamesSection","PlayerNames2","CurrencySign","PlayerBalance","PlayerGameCount","PlayerPercentages","PlayerRankingBalance","maxPositive","positiveRatio","GamePlayerPositives","barsStyleObject","marginTop","maxNegative","negativeRatio","GamePlayerNegatives","playersIdsToGamesCountObjMapper","playersIdsToBalanceObjMapper","filterGames","playersToShow","color","playersIdsToNameObjMapper","zeros","prevData","gamePlayers","prevValue","lines","dataKey","stroke","menu","yearsButtons","newState","playStopButton","innerNewState","graph","strokeDasharray","y","label","gamesDates","updateAfterSwitch","step","formatLabel","maxValue","minValue","getMappings","positivePlayers","negativePlayers","amount","Error","intersection","_","intersectionBy","mapping","negativePlayer","negative","positive","firstNegative","firstPositive","getWhoOweWhoMapping","gamePlayersData","WhoOwesWho","mappings","GameSummary","showWhoOwesWho","shouldShowWhoOwesWho","getGamePot","reduce","all","one","gameDateToString","addLeaddingZero","num","str","isoDate","parseInt","back","edit","RedBubbleButton","deleteImage","ImageData","showSuccessDeleteImage","showErrorOnDeleteImage","uploadedByName","uploadedById","curentUserId","canDelete","ShowErrorAlert","ShowSuccessAlert","base64image","resizebase64","postImage","ImagesTab","showImageUploaderForm","showImageUploader","hideImageUploaderForm","enterImagePage","selectedImage","closeImagePage","IMAGES","OnGoingGame","createPlayerRow","groupPlayers","bottomLine","buyInValue","cashOutValue","bottomLineValue","imgHeight","imageStyle","getPlayersDataAsList","inOuts","extra","buyIns","bi","time","text","cashOuts","co","inouts","timeText","getAsPokerTable","bluesCount","hasBlue","greensCount","hasGreen","blacksCount","hasBlack","redsCount","hasRed","greysCount","hasGrey","onEditClicked","onGameEditClick","onBackClicked","interval","clearInterval","onBack","render","totalCashouts","pd","total","totalBuyIn","mobilePlayers","updateOnProgressGame","scrollIntoView","deleteSelectedGame","NewGameForm","handleNewGameDateChange","event","newGame","handleNewGameDescriptionChange","createNewGame","remoteCreateGame","updateGroupGame","legal","EditGameForm","updateSelectedGamePlayerData","editGame","editPlayerInGame","getEditPlayerInGame","maxBuyInRange","maxCashOutRange","updateSelectedGame","imageUploaderData","findPlayerNotInGame","PLAYERS","GAME_PLAYERS","playa","existingPlayerId","addCurrentPlayerToGame","remoteUpdateGame","handleEditGameDateChange","handleEditGameDescriptionChange","getGameDiff","removePlayerFromGame","editGamePlayer","gameSummary","playerImageUrl","ready","diff","ShowAlert","useAlert","show","GamesTab","clearAll","showCreateGame","substring","closeCreateGameForm","closeEditGameForm","showGameData","onGoingGameId","remoteDeleteGame","removeGroupGame","showErrorOnDeleteGame","showSuccessDeleteGame","getGamesSummary","setClearAll","GAMES","mvpPlayerData","mvpName","mvpBalance","mvpImageUrl","pot","mvp","mvpBottomLine","firstName","familyName","backgroundSize","backgroundRepeat","backgroundPosition","backgroundBlendMode","updatePlayer","deletePlayer","PlayerSummary","playerGames","x","firstGame","playerGamesDivs","playerBalance","rangeBalance","gameObject","email","baseUrl","FULL_ANON_URL","PlayersTab","showPlayerData","playerSummary","showCreatePlayer","newPlayer","onPlayerEditClick","editPlayer","onPlayerDeleteClick","createNewPlayer","getNewPlayerSection","saveEditedPlayer","getPlayerEdit","GroupPage","MenuItem","Menu","getNewGameSection","Tabs","Tab","func","login","isHttps","protocol","showFB","tryConnectToFB","search","Login","performLogin","authData","issueDate","facebookResponse","accessToken","googleResponse","fbButton","click","getTime","google","clientId","onSuccess","renderProps","facebook","disableMobileRedirect","appId","autoLoad","fields","callback","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","ReactDOM","success"],"mappings":"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","file":"static/js/main.a3d39504.chunk.js","sourcesContent":["\n\nimport React, { Component } from 'react';\n\nimport ShowErrorAlert from '../containers/ShowErrorAlert';\nimport ShowSuccessAlert from '../containers/ShowSuccessAlert';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\nimport RedBubbleButton from '../containers/RedBubbleButton';\nclass ImageUploader extends Component {\n\n    constructor(props) {\n        super(props);\n        const initialState = {\n            taggedPlayerId: null,\n            image: null,\n            playerIds: [],\n            groupIds: [],\n            gameIds: [],\n            showError: null,\n            showSuccess: null,\n            uploading:false\n        };\n\n        if (props.group){\n            initialState.groupIds = [props.group.id]\n        }\n\n        if (props.gameId){\n            initialState.gameIds = [props.gameId]\n        }\n        if (props.group && props.gameId){\n            const game = props.group.games.find(g => g.id === props.gameId);\n\n            if (game && game.playersData && game.playersData.length >0){\n                initialState.taggedPlayerId = game.playersData[0].playerId;\n            }\n        }\n\n        this.state = initialState;\n    }\n\n    onReaderLoad = (e) => {\n        this.setState({ image: e.target.result });\n    }\n\n    readURL = (e) => {\n        e.preventDefault();\n        if (e.target.files && e.target.files[0]) {\n            const reader = new FileReader();\n            reader.onload = this.onReaderLoad;\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    }\n\n    uploadImage = () =>{\n        const { updateImage, uploadImage: remoteUploadImage, close } = this.props;\n        const { image, playerIds, groupIds, gameIds } = this.state;\n        const tags = {\n            playerIds,\n            groupIds,\n            gameIds\n        };\n        this.setState({ uploading: true })\n        remoteUploadImage(image, tags).then((imageObject)=>{\n            this.setState({ showSuccess: true, uploading: false});\n            updateImage(imageObject);\n            setTimeout(()=>{\n\n                close();\n            },10)\n\n        }).catch(()=>{\n\n            this.setState({ showError: true, uploading: false});\n            setTimeout(()=>{\n                this.setState({ showError: null});\n                close();\n            },10)\n        })\n\n    };\n\n    handleNewPlayerChange = (taggedPlayerId)=> {\n        this.setState({taggedPlayerId});\n    };\n\n    removePlayerTag = (playerId) =>{\n        const playerIds = [...this.state.playerIds].filter(id => id !== playerId);\n        this.setState({playerIds});\n    }\n\n    tagPlayer = () =>{\n        if (!this.state.taggedPlayerId){\n            return;\n        }\n        const playerIds = [...this.state.playerIds];\n        playerIds.push(this.state.taggedPlayerId);\n\n        let taggedPlayerId = null;\n        if (this.props.group){\n            const availablePlayersToTag = this.props.group.players.filter(p=> !playerIds.includes(p.id));\n\n            if (availablePlayersToTag.length > 0){\n                taggedPlayerId = availablePlayersToTag[0].id;\n            }\n        }\n\n        this.setState({taggedPlayerId, playerIds});\n    };\n\n    render() {\n\n       const { showError, showSuccess, uploading} = this.state;\n\n        const { group } = this.props;\n        const { image, groupIds, gameIds, playerIds } = this.state;\n        let groupName = '';\n        let gameDate = '';\n        let tagedPlayers = [];\n        if (group && groupIds[0] === group.id) {\n            groupName = group.name;\n        }\n        if (gameIds.length === 1){\n            const game = group.games.find(g => g.id === gameIds[0]);\n            gameDate = game ? game.date.AsGameName() : '';\n        }\n        if (group && playerIds.length > 0){\n            tagedPlayers = group.players.filter(p=> playerIds.includes(p.id)).map(p=>{\n                return <ul key={`_tag_${p.id}`}>{p.name} <button onClick={()=>this.removePlayerTag(p.id)} >remove tag</button></ul>\n            });\n        }\n\n        let tagPlayers = <div/>;\n        if (group && image) {\n           const availablePlayersToTag = group.players.filter(p => !playerIds.includes(p.id)).map(p=> ({ id:p.id, name:p.name }));\n           if (availablePlayersToTag.length >0) {\n               if (!this.state.taggedPlayerId){\n                  setImmediate(()=> this.setState({ taggedPlayerId: availablePlayersToTag[0].id }));\n               }\n\n               const comboVals = availablePlayersToTag.map(player =>\n                   (\n                       <option key={`_x_comboVals_${player.id}`} value={player.id}>\n                           { player.name }\n                       </option>\n                   )\n               );\n               tagPlayers = (\n                   <div>\n                       <div>\n                           add players tags:\n                       </div>\n                       <select name=\"player\" value={this.state.taggedPlayerId || ''} onChange={(e)=>this.handleNewPlayerChange(e.target.value)}>\n                           {comboVals}\n                       </select>\n                       <GrayBubbleButton className=\"button left-margin\" disabled={!this.state.taggedPlayerId} onClick={this.tagPlayer}> Tag player</GrayBubbleButton>\n               </div>);\n\n\n           }\n\n\n\n        }\n\n\n        // eslint-disable-next-line\n        return (\n            <div id=\"image-uploader\">\n\n                <div>\n                    <div>\n                        choose image:\n                    </div>\n                    <div>\n                        <input type=\"file\" accept=\".png,.jpg,.jpeg\" id=\"imgInput\" onChange={this.readURL}/>\n                    </div>\n                    <div>\n                        {image && <img alt=\"image\" id='image-uploader-preview' src={image}/>}\n                    </div>\n                    {!image &&  <div>\n                       no image selected yet\n                    </div> }\n                </div>\n                {groupIds.length > 0 && <div> Tagging the group ({groupName})</div>}\n                {gameIds.length > 0 && <div> Tagging the game ({gameDate})</div>}\n                {playerIds.length > 0 && <div> Tagging players:</div>}\n                {tagedPlayers.length > 0 && <div> {tagedPlayers}</div>}\n                <hr/>\n                {tagPlayers}\n                <div>\n                    { uploading && <div>please wait..</div>}\n                    <GreenBubbleButton className=\"button\" disabled={!image || uploading} onClick={this.uploadImage}> Upload </GreenBubbleButton>\n                </div>\n\n                <div>\n                    <GrayBubbleButton className=\"button\" disabled={uploading} onClick={this.props.close}> cancel </GrayBubbleButton>\n                </div>\n\n                { showError && <ShowErrorAlert message={\"failed to upload image\"}/>}\n                { showSuccess && <ShowSuccessAlert message={\"image uploaded successfully\"}/>}\n            </div>\n        );\n\n    }\n}\n\nexport default ImageUploader;\n\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function registerSubscription(data, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      url: `${URL_PREFIX}/notifications`,\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n    console.log('registerSubscription', options.method, options.url, options.body);\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to registerSubscription , server might be down');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('request cb error body', bodyObj);\n        return reject(bodyObj.title);\n      }\n\n      if (response && response.headers && response.headers['x-user-context']) {\n        const userContextString = response.headers['x-user-context'];\n        const userContext = JSON.parse(decodeURI(userContextString));\n        const data = JSON.parse(body);\n        console.log('got data:', data);\n        return resolve({\n          data, userContext, provider, token,\n        });\n      }\n      console.error('request cb no header');\n\n      return reject('server response is missing the user context');\n    });\n  });\n}\n\nexport default registerSubscription;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function unregisterSubscription(data, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      url: `${URL_PREFIX}/notifications`,\n      method: 'DELETE',\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n    console.log('unregisterSubscription', options.method, options.url, options.body);\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to unregisterSubscription , server might be down');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('request cb error body', bodyObj);\n        return reject(bodyObj.title);\n      }\n\n      if (response && response.headers && response.headers['x-user-context']) {\n        const userContextString = response.headers['x-user-context'];\n        const userContext = JSON.parse(decodeURI(userContextString));\n        const data = JSON.parse(body);\n        console.log('got data:', data);\n        return resolve({\n          data, userContext, provider, token,\n        });\n      }\n      console.error('request cb no header');\n\n      return reject('server response is missing the user context');\n    });\n  });\n}\n\nexport default unregisterSubscription;\n","/* eslint-disable no-useless-escape */\nimport registerSubscription from './actions/registerSubscription';\nimport unregisterSubscription from './actions/unregisterSubscription';\n\nconst applicationServerPublicKey = 'BIzamkxmxtu3jgxzUVL3Pg7AKbbxv2y8dLPPePT6fxXVI9Nl4wBJJpGeTAEofw0etXweRs8COyNrRJ5Aw2lhmXg';\nlet isSubscribed = false;\nlet swRegistration = null;\nlet pushSupported = true;\nfunction urlB64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  // eslint-disable-next-line\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\nlet subscription = localStorage.getItem('subscription');\nif (subscription) {\n  subscription = JSON.parse(subscription);\n  isSubscribed = true;\n}\n\nif ('serviceWorker' in navigator && 'PushManager' in window) {\n  //console.log('Service Worker and Push is supported');\n\n  navigator.serviceWorker.register('service-worker.js')\n    .then((swReg) => {\n     // console.log('Service Worker is registered', swReg);\n\n      swRegistration = swReg;\n    })\n    .catch((error) => {\n     console.error('Service Worker Error', error);\n      pushSupported = false;\n    });\n} else {\n  console.warn('Push messaging is not supported');\n  pushSupported = false;\n}\nasync function updateSubscriptionOnServer(subscription, provider, token) {\n  await registerSubscription(subscription, provider, token);\n  localStorage.setItem('subscription', JSON.stringify(subscription));\n}\n\nasync function updateUnsubscriptionOnServer(subscription, provider, token) {\n  await unregisterSubscription(subscription, provider, token);\n  localStorage.removeItem('subscription');\n}\n\nfunction subscribeUser(provider, token) {\n  if (isSubscribed || !pushSupported) {\n    return;\n  }\n  const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey,\n  })\n    .then((subscription) => {\n      //console.log('User is subscribed.');\n\n      updateSubscriptionOnServer(subscription, provider, token);\n      //console.log('user is subscribed to push notifications');\n      isSubscribed = true;\n    });\n}\n\nfunction unsubscribeUser(provider, token) {\n  //console.log('unsubscribeUser');\n  localStorage.removeItem('subscription');\n  if (!isSubscribed) {\n    return;\n  }\n  return swRegistration.pushManager.getSubscription()\n    .then((subscription) => {\n      if (subscription) {\n        updateUnsubscriptionOnServer(subscription, provider, token);\n        return subscription.unsubscribe();\n      }\n    });\n}\n\nfunction IsSubscribed() {\n // console.log('IsSubscribed()', isSubscribed);\n  return isSubscribed;\n}\nfunction IsPushSupported() {\n  return pushSupported;\n}\nexport default {\n  IsSubscribed,\n  IsPushSupported,\n  subscribeUser,\n  unsubscribeUser,\n};\n","let URL_PREFIX = `${window.location.origin}/api/v2`;\nif (URL_PREFIX === 'http://localhost:3000/api/v2'){\n    URL_PREFIX = 'http://www.poker-stats.com/api/v2'\n}\nexport default URL_PREFIX;\n","\nimport React, { Component } from 'react';\nimport { version } from '../../package.json';\nexport default class Loader extends Component {\n    render() {\n        const heart =  <i className=\"emSvgSize em-svg em-hearts\"></i>;\n        const spade =  <i className=\"emSvgSizeBigger em-svg em-spades\"></i>;\n        const diamond =<i className=\"emSvgSizeBigger em-svg em-diamonds\"></i>;\n        const club =   <i className=\"emSvgSizeBigger em-svg em-clubs\"></i>;\n\n        return  (\n            <div id=\"loader\">\n                <div className=\"app-version\">V.{version}</div>\n                <div className=\"loader\">\n                    <span id=\"loaderSpan1\" className=\"loaderSpan\">{heart}</span>\n                    <span id=\"loaderSpan2\" className=\"loaderSpan\">{spade}</span>\n                    <span id=\"loaderSpan3\" className=\"loaderSpan\">{diamond}</span>\n                    <span id=\"loaderSpan4\" className=\"loaderSpan\">{club}</span>\n                </div>\n            </div>\n    );\n    }\n}\n","import React from 'react'\n\nconst GrayBubbleButton = (props) => {\n\n    return (\n        <button {...props} className={`${props.className} confetti-button confetti-button-gray`} onClick={(e)=>{\n            e.preventDefault();\n            //reset animation\n            try {\n                e.target.classList.remove('animate');\n            } catch (e) {\n            }\n\n            try {\n                e.target.classList.add('animate');\n            } catch (e) {\n            }\n            setTimeout(function(){\n                try {\n                    e.target.classList.remove('animate');\n                } catch (e) {\n                }\n            },700);\n            setTimeout(function(){\n                try {\n                    props.onClick(e);\n                } catch (e) {\n                }\n            },500);\n\n        }} > {props.children}</button>\n    )\n\n\n}\n\nexport default GrayBubbleButton;\n","/* eslint-disable no-lone-blocks */\nimport React, { Component } from 'react';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\nimport RedBubbleButton from '../containers/RedBubbleButton';\nimport { version } from '../../package.json';\n\nclass NewGroupForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showMenu:false,\n            error: null,\n            group:props.group || {\n                name: '',\n                description: ''\n            },\n            update: props.isUpdate\n        };\n    }\n\n    handleGroupItemChange = (attributeName, newValue) => {\n        const group = { ...this.state.group, [attributeName]: newValue };\n        this.setState({ group });\n    };\n\n    cancel = () => {\n        this.setState({showMenu: false});\n        this.props.onCancel();\n    };\n    logout = () => {\n        this.setState({showMenu: false});\n        this.props.logout();\n    };\n\n    delete = () => {\n        this.setState({showMenu: false});\n        this.props.delete(this.state.group.id)\n    };\n\n    // eslint-disable-next-line\n    getHeader = ()=>{\n\n        const menuItems = [];\n\n        menuItems.push(<MenuItem key=\"menuItem1\" onClick={this.cancel}>Cancel</MenuItem>)\n        if (this.state.update){\n            menuItems.push(<MenuItem key=\"menuItem3\" onClick={this.delete} >Delete</MenuItem>)\n        }\n\n        menuItems.push(<MenuItem key=\"menuItem5\" onClick={this.logout}>Logout</MenuItem>)\n        menuItems.push(<MenuItem key=\"menuItem6\" onClick={()=>{}}><div><hr/> <span className=\"version-menu-item-text\">version: </span><span className=\"version-menu-item-number\">{version}</span></div></MenuItem>);\n\n\n        const menuIcon =  <MenuIcon id=\"menuIcon\" fontSize=\"inherit\" className='menu-icon' onClick={()=>this.setState({showMenu: !this.state.showMenu})} />;\n        return  <div id=\"app-header\">\n            {menuIcon}\n\n            {this.state.showMenu &&\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={ ()=>document.getElementById(\"menuIcon\") }\n                keepMounted\n                open={true}\n                onClose={()=>this.setState({showMenu: !this.state.showMenu})}\n            >\n\n                {menuItems}\n\n            </Menu>}\n\n            <span id=\"app-header-text\">{this.state.update ? 'Update': 'Create'} Group</span>\n        </div>\n    };\n\n    render() {\n        const header = this.getHeader();\n        const isLegalGroup = this.state.group.name.length > 0;\n\n        return (\n            <div id=\"create-group-form container\">\n                {header}\n                <div id=\"create-group-form-wrapper\">\n                    <div className=\"row\">\n                        <span className=\"new-group-form-item-label\">Name*</span>\n                    </div>\n                    <div className=\"row\">\n                        <input type=\"text\" placeholder=\"Enter group name\" id=\"newGroupTitle\" className=\"formTextInput-full-width\" value={this.state.group.name} onChange={(e) => this.handleGroupItemChange('name', e.target.value)} />\n                    </div>\n                    <div className=\"row\">\n                        <span className=\"new-group-form-item-label\">Description</span>\n                    </div>\n                    <div className=\"row\">\n                        <input type=\"text\" placeholder=\"Enter description\" id=\"newGroupDescription\" className=\"formTextInput-full-width\" value={this.state.group.description} onChange={(e) => this.handleGroupItemChange('description', e.target.value)} />\n                    </div>\n\n                    <div className=\"row top-margin\">\n                        <GrayBubbleButton className=\"button left-pad\"  onClick={this.props.onCancel}> Cancel </GrayBubbleButton>\n\n                        <GreenBubbleButton className=\"button left-pad left-margin\" onClick={()=>this.props.saveGroup(this.state.group)} disabled={!isLegalGroup}>{this.state.update ? 'update' : 'save'}</GreenBubbleButton>\n                        { this.state.update && <RedBubbleButton className=\"button left-pad left-margin\" onClick={()=>this.props.deleteGroup(this.state.group.id)} disabled={!isLegalGroup}> delete</RedBubbleButton>}\n                    </div>\n\n\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default NewGroupForm;\n\n","import React from 'react'\nconst GreenBubbleButton = (props) => {\n    return (\n        <button {...props} className={`${props.className} confetti-button confetti-button-green`} onClick={(e)=>{\n                e.preventDefault();\n                //reset animation\n            try {\n                e.target.classList.remove('animate');\n            } catch (e) {\n            }\n\n            try {\n                e.target.classList.add('animate');\n            } catch (e) {\n            }\n                setTimeout(function(){\n                    try {\n                        e.target.classList.remove('animate');\n                    } catch (e) {\n                    }\n                },700);\n                setTimeout(function(){\n                    try {\n                        props.onClick(e);\n                    } catch (e) {\n                    }\n                },500);\n\n        }} > {props.children}</button>\n    )\n}\n\nexport default GreenBubbleButton;\n","/* eslint-disable no-lone-blocks */\n/* eslint-disable no-restricted-globals */\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport keepAlive from './actions/keepAlive';\nimport createGroup from './actions/createGroup';\nimport updateGroup from './actions/updateGroup';\nimport deleteGroup from './actions/deleteGroup';\nimport requestInvitation from './actions/requestInvitation';\nimport getGroupData from './actions/getGroupData';\n\nimport Login from './components/Login';\nimport NewGroupForm from './components/NewGroupForm';\nimport GroupPage from './components/GroupPage';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Loading from './containers/Loading';\nimport UserGroups from \"./components/UserGroups\";\n\nimport notificationHelper from \"./notificationHelper\";\nimport {version} from \"../package.json\";\n\nconst {IsSubscribed, IsPushSupported, subscribeUser,unsubscribeUser} = notificationHelper;\n\nconst KEEP_ALIVE_INTERVAL = 1000 * 60 * 5;\n\n// eslint-disable-next-line\nDate.prototype.AsGameName = function() {\n    const stringValue = this.toISOString().substr(0,10);\n    const day = stringValue.substr(8,2);\n    const month = stringValue.substr(5,2);\n    const year = stringValue.substr(0,4);\n    return `${day}/${month}/${year}`;\n};\n\n// eslint-disable-next-line\nDate.prototype.AsExactTime = function() {\n    return this.toISOString().substr(11,5);\n};\n// eslint-disable-next-line\nString.prototype.AsGameName = function() {\n    const date = new Date(this);\n    return date.AsGameName()\n};\n\n// eslint-disable-next-line\nString.prototype.AsExactTime = function(hours) {\n    return moment(this).add(hours, 'hours').toDate().AsExactTime()\n};\n\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            showMenu:false,\n            subscribed:IsSubscribed(),\n            showGroupCreationForm: false,\n            showCreateGameForm:false,\n            showCreatePlayerForm:false,\n            showGroupEditForm: null,\n            loading: false,\n            isAuthenticated: false,\n            user: null,\n            groups:null,\n            provider:'',\n            error:null,\n            token:null,\n            showGroupPage: null\n        };\n    }\n\n    onNotificationButtonClick = async() =>{\n        try {\n            console.log('onNotificationButtonClick this.state.subscribed', this.state.subscribed)\n            if (this.state.subscribed) {\n                await unsubscribeUser(this.state.provider, this.state.token);\n                this.setState({subscribed:false, showMenu: false})\n            } else {\n                await subscribeUser(this.state.provider, this.state.token);\n                this.setState({subscribed:true, showMenu: false})\n            }\n        } catch (e) {\n            console.log('onNotificationButtonClick Error', e)\n        }\n\n    };\n\n    logout = () => {\n        localStorage.removeItem('authData');\n        this.setState({isAuthenticated: false, user: null, events:[], error:null, showMenu:false})\n        window.location.replace('https://www.poker-stats.com');\n\n    };\n\n    createGroup = () => {\n        this.setState({ showGroupCreationForm: true, error:null, showMenu: false})\n    };\n\n    onCancel = () => {\n        console.log('onCancel')\n        this.setState({ showGroupCreationForm: false,showGroupEditForm:null, error:null, showMenu: false})\n    };\n\n    onFailure = (error) => {\n        console.error('App onFailure', error);\n        this.setState({error })\n    };\n\n    backToMainPage = () => {\n        this.setState({group:null, players:null,games:null,error:null});\n    };\n\n    onLogin = async ({userContext, provider, token, groups}) => {\n        this.setState({user: userContext, groups, loading: false, isAuthenticated: true, error:null, provider, token})\n        setInterval(keepAlive, KEEP_ALIVE_INTERVAL)\n    };\n\n    getHeader = ()=>{\n\n\n        const menuItems = [];\n        if (IsPushSupported()){\n            menuItems.push( <MenuItem key=\"menuItem1\" onClick={this.onNotificationButtonClick}>{ this.state.subscribed ? 'disable':'enable'} notifications</MenuItem> )\n        }\n        menuItems.push(<MenuItem key=\"menuItem2\" onClick={this.createGroup}>Create New Group</MenuItem>)\n        menuItems.push(<MenuItem key=\"menuItem3\" onClick={this.logout}>Logout</MenuItem>)\n        menuItems.push(<MenuItem key=\"menuItem6\" onClick={()=>{}}><div><hr/> <span className=\"version-menu-item-text\">version: </span><span className=\"version-menu-item-number\">{version}</span></div></MenuItem>);\n\n\n        const menuIcon =  <MenuIcon id=\"menuIcon\" fontSize=\"inherit\" className='menu-icon' onClick={()=>this.setState({showMenu: !this.state.showMenu})} />;\n        return  <div id=\"app-header\">\n            {menuIcon}\n\n            {this.state.showMenu &&\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={ ()=>document.getElementById(\"menuIcon\") }\n                keepMounted\n                open={true}\n                onClose={()=>this.setState({showMenu: !this.state.showMenu})}\n            >\n\n                {menuItems}\n\n            </Menu>}\n\n\n\n            <span id=\"app-header-text\"><img src=\"pokerStatsLogoWithSheep.png\" className=\"sheep-logo\"/> Groups</span>\n        </div>\n    };\n\n    updateExistingGroup = (group) =>{\n        this.setState({ loading: true, error: null});\n        setImmediate(async ()=>{\n            try {\n                const newGroup = await updateGroup(group.id, group, this.state.provider, this.state.token);\n                const groups = [newGroup, ...this.state.groups];\n                this.setState({ loading: false, groups,  showGroupEditForm:null, showGroupCreationForm:null});\n            } catch (error) {\n                this.setState({ loading: false, error,  showGroupEditForm:null, showGroupCreationForm:null});\n            }\n        })\n    }\n    createNewGroup = (group) =>{\n        setImmediate(async ()=>{\n            try {\n                const newGroup = await createGroup(group, this.state.provider, this.state.token);\n                const groups = [newGroup, ...this.state.groups];\n                this.setState({ loading: false, groups});\n            } catch (error) {\n                this.setState({ loading: false, error});\n            }\n        })\n    }\n\n    saveGroup = (group)=>{\n        this.setState({ showGroupCreationForm: false, error:null, loading: true});\n        if (group.id){\n            this.updateExistingGroup(group)\n        } else{\n            this.createNewGroup(group)\n        }\n\n\n    };\n\n    delGroup = (groupId)=>{\n        if (confirm(\"Are you sure?\")){\n            this.setState({ error:null, loading: true});\n            setImmediate(async ()=>{\n                try {\n                    const deletedGroupId = await deleteGroup(groupId, this.state.provider, this.state.token);\n                    const groups = this.state.groups.filter(group=>(group.id !== deletedGroupId));\n                    this.setState({ loading: false, groups,  showGroupEditForm:null, showGroupCreationForm:null });\n\n                } catch (error) {\n                    console.error('error calling delete',error)\n                    this.setState({ loading: false, error,  showGroupEditForm:null, showGroupCreationForm:null});\n                }\n            })\n        }else{\n            this.setState({ showGroupEditForm:null, showGroupCreationForm:null });\n        }\n    };\n\n    goHome = () =>{\n        this.setState({ showMenu:false, showGroupCreationForm: false, loading: false, showGroupPage: null, showGroupEditForm:null});\n    };\n\n    showGroup = async (group) =>{\n        if (group.userInGroup){\n            this.setState({showMenu:false, loading:true});\n            getGroupData(group, this.state.provider, this.state.token).then((g)=>{\n\n                g.players = g.players.map(player=>{\n                    let balance = 0;\n                    const playersGames = g.games.filter(game=> {\n                        const play = game.playersData.find(data => data.playerId === player.id);\n                        if (play){\n                            balance += play.cashOut;\n                            balance -= play.buyIn;\n                        }\n                        return play;\n                    });\n                    const gamesCount = playersGames.length;\n\n                    return {...player, gamesCount, balance};\n                }).sort((a,b)=>  a.gamesCount === b.gamesCount ? ((a.balance > b.balance ? -1 : 1)) : (a.gamesCount > b.gamesCount ? -1 : 1));\n\n                this.setState({ showGroupPage: g, loading:false});\n            }).catch((e)=>{\n                this.setState({ error: e, loading:false});\n            })\n\n\n        } else{\n            if (group.invitationRequested){\n                this.setState({showMenu:false});\n                alert('invitation already requested. you will get an answer in your email.');\n            }else if (confirm(\"You sre not in this group. would you like to ask for an invitation?\")){\n               this.setState({loading:true});\n               requestInvitation(group.id, this.state.provider, this.state.token).then(()=>{\n                   this.setState({loading:false});\n               })\n            } else {\n                this.setState({showMenu:false});\n            }\n        }\n\n    };\n\n    editGroup = (group) =>{\n        console.log('editGroup')\n        this.setState({ showMenu:false, showGroupEditForm: group});\n    };\n\n    createGame = (group, game) =>{\n        this.setState({ showMenu:false, showCreateGameForm: { group, game }});\n    };\n    createPlayer = (group, player) =>{\n        this.setState({ showMenu:false, showCreatePlayerForm: { group, player }});\n    };\n\n    updatePlayerData = (player)=>{\n        console.log('app update player', player);\n        const showGroupPage = {...this.state.showGroupPage};\n        let exist = false;\n        showGroupPage.players = showGroupPage.players.map(p=>{\n            if (p.id !== player.id) return p;\n            exist = true;\n            return player;\n        });\n        if (!exist){\n            showGroupPage.players.push(player)\n        }\n        this.setState({showGroupPage})\n    }\n\n    updatePlayerRemoved = (playerId)=>{\n        console.log('app removed player', playerId);\n        const showGroupPage = {...this.state.showGroupPage};\n        showGroupPage.players = showGroupPage.players.filter(p=> p.id !== playerId);\n\n        this.setState({showGroupPage})\n    }\n\n    updateGame = (game)=>{\n\n        const showGroupPage = {...this.state.showGroupPage};\n        let exist = false;\n        showGroupPage.games = showGroupPage.games.map(g=>{\n            if (g.id !== game.id) return g;\n            exist = true;\n            if (typeof game.date === 'string'){\n                game.date = new Date(game.date);\n            }\n            return game;\n        });\n        if (!exist){\n            if (typeof game.date === 'string'){\n                game.date = new Date(game.date);\n            }\n            showGroupPage.games.push(game)\n        }\n        this.setState({showGroupPage})\n    }\n    removeGame = (gameId)=>{\n        console.log('app game remove', gameId);\n        const showGroupPage = {...this.state.showGroupPage};\n        showGroupPage.games = showGroupPage.games.filter(g=>{\n            return (g.id !== gameId)\n        });\n        this.setState({showGroupPage})\n    }\n\n    updateImage = (image)=>{\n        const showGroupPage = {...this.state.showGroupPage};\n        let exist = false;\n        showGroupPage.images = showGroupPage.images.map(im=>{\n            if (im.id !== image.id) return im;\n            exist = true;\n            return im;\n        });\n        if (!exist){\n            showGroupPage.images = [image, ...showGroupPage.images]\n        }\n        this.setState({showGroupPage})\n    }\n    removeImage = (imageId)=>{\n        const showGroupPage = {...this.state.showGroupPage};\n        showGroupPage.images = showGroupPage.images.filter(im=>{\n            return (im.id !== imageId)\n        });\n        this.setState({showGroupPage})\n    }\n\n    render() {\n\n        const {loading, isAuthenticated, groups, showGroupCreationForm, showGroupPage, showGroupEditForm}  = this.state;\n        if (loading){\n            return  <Loading/>;\n        }\n        if (!isAuthenticated){\n            return  <Login onLogin={this.onLogin} />;\n        }\n\n        if (showGroupEditForm){\n            return <NewGroupForm onCancel={this.onCancel} saveGroup={this.saveGroup} deleteGroup={this.delGroup} logout={this.logout} group={showGroupEditForm} isUpdate={true}/>;\n        }\n\n        if (showGroupPage){\n            return <GroupPage goHome={this.goHome}\n                              group={showGroupPage}\n                              user={this.state.user}\n                              updatePlayerRemoved={this.updatePlayerRemoved}\n                              updateGame={this.updateGame}\n                              updatePlayerData={this.updatePlayerData}\n                              editGroup={this.editGroup}\n                              deleteGroup={this.delGroup}\n                              removeGame={this.removeGame}\n                              updateImage={this.updateImage}\n                              removeImage={this.removeImage}\n                              provider={this.state.provider}\n                              token={ this.state.token} logout={this.logout}/>\n        }\n\n        if (showGroupCreationForm){\n            return  <NewGroupForm onCancel={this.onCancel} saveGroup={this.saveGroup} logout={this.logout}/>;\n        }\n\n\n\n        const header = this.getHeader();\n        return (\n            <div className=\"App container\">\n                <div className=\"errorSection\">\n                    {this.state.error}\n                </div>\n                {header}\n\n\n                <div className=\"MainSection\">\n\n                    <UserGroups createGroup={this.createGroup} groups={groups} showGroup={this.showGroup}  />\n\n                </div>\n\n            </div>);\n\n    }\n}\n\nexport default App;\n\n","import request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function keepAlive() {\n  console.log('keep server Alive ' )\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'GET',\n      url: `${URL_PREFIX}/keep-alive`\n    };\n    request(options, (error, response, body) => {\n      const answer = JSON.parse(body);\n      return resolve(answer);\n    });\n  });\n}\n\nexport default keepAlive;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function createGroup(group, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'POST',\n      url: `${URL_PREFIX}/groups`,\n      body: JSON.stringify(group),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to create new group');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to create new group');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default createGroup;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function updateGroup(groupId, data, provider, token) {\n  console.log('updateGroup', groupId, data, provider, token);\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'PATCH',\n      url: `${URL_PREFIX}/groups/${groupId}`,\n      body: JSON.stringify(data),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to update group');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to update group');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default updateGroup;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function deleteGroup(groupId, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'DELETE',\n      url: `${URL_PREFIX}/groups/${groupId}`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to delete group');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to delete group');\n        return reject(bodyObj.title);\n      }\n      return resolve();\n    });\n  });\n}\n\nexport default deleteGroup;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function requestInvitation(groupId, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'POST',\n      url: `${URL_PREFIX}/invitations-requests/`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        requestedGroupId: groupId,\n      }),\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to requestInvitation', error);\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to requestInvitation', bodyObj);\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default requestInvitation;\n","\nimport URL_PREFIX from '../url';\nimport request from 'request';\n\nasync function getGroupData(group, provider, token){\n  return new Promise((resolve,reject)=>{\n    const playersOptions = {\n      method: 'GET',\n      url: `${URL_PREFIX}/groups/${group.id}/players/`,\n      headers:{\n        provider,\n        \"x-auth-token\": token,\n        \"Content-Type\":'application/json'\n      }\n    };\n    const gamesOptions = {\n      method: 'GET',\n      url: `${URL_PREFIX}/groups/${group.id}/games/`,\n      headers:{\n        provider,\n        \"x-auth-token\": token,\n        \"Content-Type\":'application/json'\n      }\n    };\n    const imagesOptions = {\n      method: 'GET',\n      url: `${URL_PREFIX}/groups/${group.id}/images/`,\n      headers:{\n        provider,\n        \"x-auth-token\": token,\n        \"Content-Type\":'application/json'\n      }\n    };\n    let images;\n    let players;\n    let games;\n\n    request(playersOptions, (error, response, body) =>{\n      if (error || response.statusCode>=400){\n        if (error){\n          console.error('request cb error.failed to get group players', error);\n          return reject('failed to get group data');\n        }else{\n          const bodyObj = JSON.parse(body) ;\n          console.error('failed to get group players',bodyObj);\n          return reject(bodyObj.title);\n        }\n      }else{\n        players = JSON.parse(body).results;\n        if (players && games && images){\n          const userContextString = response.headers['x-user-context'];\n          const userContext = JSON.parse(decodeURI(userContextString));\n          return resolve({ ...group, players, games, images, userContext});\n        }\n      }\n    });\n    request(gamesOptions, (error, response, body) =>{\n      if (error || response.statusCode>=400){\n        if (error){\n          console.error('request cb error.failed to get group games', error);\n          return reject('failed to get group data');\n        }else{\n          const bodyObj = JSON.parse(body) ;\n          console.error('failed to get group games',bodyObj);\n          return reject(bodyObj.title);\n        }\n      }else{\n        games = (JSON.parse(body).results).map(game=>{\n          return {\n            ...game,\n            date: new Date(game.date)\n          }\n        });\n        if (players && games && images){\n          const userContextString = response.headers['x-user-context'];\n          const userContext = JSON.parse(decodeURI(userContextString));\n\n          return resolve({ ...group, players, games, images, userContext});\n        }\n      }\n    });\n\n    request(imagesOptions, (error, response, body) =>{\n      if (error || response.statusCode>=400){\n        if (error){\n          console.error('request cb error.failed to get group images', error);\n          return reject('failed to get group data');\n        }else{\n          const bodyObj = JSON.parse(body) ;\n          console.error('failed to get group images',bodyObj);\n          return reject(bodyObj.title);\n        }\n      }else{\n        images = JSON.parse(body).results;\n        if (players && games && images){\n          const userContextString = response.headers['x-user-context'];\n          const userContext = JSON.parse(decodeURI(userContextString));\n\n          return resolve({ ...group, players, games, images, userContext});\n        }\n\n      }\n\n    });\n\n\n  })\n};\n\nexport default getGroupData;\n","\nimport React, { Component } from 'react';\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nconst introJs = require('intro.js');\n\n\n\nclass UserGroups extends Component {\n\n    constructor() {\n        super();\n        this.imageIndex = 0;\n        this.imagesCount = 7;\n        this.clearGamesTabSelections = ()=>{};\n\n\n        this.state = { tabKey: 'myGroups' }\n    }\n\n\n    startIntro(){\n        introJs().start();\n    }\n    getImage=()=>{\n\n        this.imageIndex++;\n\n        if (this.imageIndex > this.imagesCount) {\n            this.imageIndex = 1;\n        }\n        return `backgroundImage${this.imageIndex}.jpg`;\n    }\n\n    getGroupsDiv=({ groups, showAddGroupItem})=>{\n\n        const groupsItems = groups.map((group) => {\n            const style = {\n                backgroundImage: `url(${group.imageUrl || this.getImage()})`,\n                borderRadiusTop: '50px',\n            };\n\n            return (<div key={group.id}  className={`group-item-div ${group.isAdmin ? 'group-item-div-admin' : ''}`}  onClick={()=>this.props.showGroup(group)}>\n                        <div key={group.id} className=\"group-item-div-inner\" style={style}>\n                            <div><b  className=\"text-shadow\">{group.name }</b></div>\n                            <div className=\"group-description text-shadow\">{group.userInGroup ? group.description : 'not in this group' }</div>\n\n                            <div className=\"my-group\">{group.userInGroup ? '' : (group.invitationRequested ? 'invitation was requested': 'click to ask for an invitation') }</div>\n\n                        </div>\n\n                        <div className=\"group-extra-data\">\n                            <div>\n                                {group.playersCount} players\n\n                            </div>\n                            <div>\n                                {group.gamesCount} games\n\n                            </div>\n                        </div>\n                    </div>);\n\n        });\n\n\n        return (<div id=\"user-groups\" className=\"row\">\n            { showAddGroupItem && (\n                <div className=\"row\">\n                    <div className=\"\">\n                        <div className=\"group-item-div\" onClick={this.props.createGroup}>\n                            <img src=\"plus.png\" className=\"group-item-div-plus-sign\"/>\n                        </div>\n                    </div>\n                </div>)}\n                {groupsItems}\n        </div>);\n\n\n    }\n\n    getUserGroupsDiv=()=>{\n        const groups = this.props.groups || [];\n        const myGroups = groups.filter(group => group.userInGroup);\n        return this.getGroupsDiv({ groups: myGroups, showAddGroupItem:true});\n    }\n\n\n    getOtherGroupsDiv = ()=>{\n        const groups = this.props.groups || [];\n        const otherGroups = groups.filter(group => !group.userInGroup);\n        return this.getGroupsDiv({ groups: otherGroups, showAddGroupItem:false});\n    }\n\n\n    onKeyChange = (tabKey) =>{\n        console.log('### tabKey',tabKey)\n       // this.clearGamesTabSelections();\n        this.setState({tabKey });\n    };\n    render() {\n        const isMobile = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\n\n        return  <div id=\"groups-page\"  >\n                    <Tabs defaultActiveKey=\"myGroups\" id=\"uncontrolled-tab-example\" style={{fontSize: isMobile ? \"0.8em\" : \"1em\"}} activeKey={this.state.tabKey} onSelect={this.onKeyChange} variant=\"pills\">\n                        <Tab eventKey=\"myGroups\" title=\"My Groups\" >\n                            {this.getUserGroupsDiv()}\n                        </Tab>\n                        <Tab eventKey=\"otherGroups\" title=\"Other Groups\" >\n                            {this.getOtherGroupsDiv()}\n                        </Tab>\n                    </Tabs>\n                </div>;\n    }\n}\n\nexport default UserGroups;\n\n\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function getGame(groupId, gameId, provider, token) {\n  console.log('getGame ' )\n\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'GET',\n      url: `${URL_PREFIX}/groups/${groupId}/games/${gameId}`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error.failed to get game data', error);\n          return reject('failed to get game data');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to get game data', bodyObj);\n        return reject(bodyObj.title);\n      }\n      const game = JSON.parse(body);\n      return resolve(game);\n    });\n  });\n}\n\nexport default getGame;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\n\nasync function createGame(groupId, gameData, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'POST',\n      url: `${URL_PREFIX}/groups/${groupId}/games`,\n      body: JSON.stringify(gameData),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to create new game');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to create new game');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default createGame;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function updateGame(groupId, gameId, data, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'PATCH',\n      url: `${URL_PREFIX}/groups/${groupId}/games/${gameId}`,\n      body: JSON.stringify(data),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n    console.log('updateGame options',options)\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to update game');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to update game');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default updateGame;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function deleteGame(groupId, gameId, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'DELETE',\n      url: `${URL_PREFIX}/groups/${groupId}/games/${gameId}`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to delete game');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to delete game');\n        return reject(bodyObj.title);\n      }\n      return resolve();\n    });\n  });\n}\n\nexport default deleteGame;\n","const ANON_URL = 'anonymous2.png';\nconst GREEN = 'green.png';\nconst RED = 'red.png';\nconst TRANSPARENT = 'transparent.png';\n\nexport default {\n    ANON_URL,\n    GREEN,\n    RED,\n    TRANSPARENT\n};\n","const body = document.getElementsByTagName('body')[0];\nconst windowWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\nconst Width = windowWidth;\nconst Height = window.innerHeight || document.documentElement.clientHeight || body.clientHeight;\nconst SmartPhone = (Width < 600);\n\nexport default {\n  Width,\n  Height,\n  SmartPhone,\n};\n","\nimport React, { Component } from 'react';\n\nclass ImageSlider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {index: 0};\n\n        const {group, gameId, playerId} = props;\n        const {images, games, players} = group;\n\n        const relevantImages = images.filter(imageObject => {\n            if (gameId) {\n                return imageObject.gameIds.includes(gameId);\n            }\n            if (playerId) {\n                return imageObject.playerIds.includes(playerId);\n            }\n            return true;\n        });\n        this.items = relevantImages.map(imageObject => {\n            const taggedGame = games.find(game => imageObject.gameIds.includes(game.id));\n\n            const date = taggedGame ? taggedGame.date.AsGameName() : '';\n\n            const taggedPlayers = players.filter(player => imageObject.playerIds.includes(player.id)).map(player => player.name).join(',');\n            return {\n                original: imageObject.image,\n                thumbnail: imageObject.image,\n                date,\n                sizes: \"10vw\",\n                taggedPlayers\n            }\n        });\n\n\n        this.ref = setInterval(() => {\n            let index = this.state.index + 1;\n            if (index >= relevantImages.length) {\n                index = 0;\n            }\n            this.setState({index});\n        }, 5000);\n    }\n\n\n    render() {\n        const { gameId, playerId } = this.props;\n\n        if (this.items.length === 0){\n            console.log('no images found for this game/player');\n            return <div/>\n        }\n\n        return (\n            <div className=\"image-slider\">\n                {playerId && <div>player images</div>}\n                {gameId && <div>game images</div>}\n\n                <img src={this.items[this.state.index].original}/>\n                <div>\n                    { this.items[this.state.index].date  }\n                </div>\n\n                <div>\n                    in the picture: { this.items[this.state.index].taggedPlayers }\n                </div>\n            </div>\n        )\n    }\n}\nexport default ImageSlider;\n","import React, { Component } from 'react';\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, ReferenceLine } from 'recharts';\n\nimport CONSTS from '../CONSTS';\n\nimport Size from '../sizes';\nimport InputRange from \"react-input-range\";\nimport ImageSlider from '../components/ImageSlider';\nconst colors = [\"#317F42\",  \"#14A9B6\",  \"#D9892B\",  \"#A23DA3\",  \"#A3A23D\",  \"#9189DF\",  \"#74B0A1\",  \"#A53542\",  \"#FD0724\",  \"#8F6947\",  \"#FF77E7\", \"#447F66\",  \"#55A9A7\",  \"#D6696B\",  \"#423D7A\"];\n\nconst { ANON_URL, GREEN, RED, TRANSPARENT} = CONSTS;\nconst  {Width} = Size;\nconst SmartPhone = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\nclass GameData extends Component{\n\n    createPlayersDataAsFakeGame = (group, max, minIndex, maxIndex, showSummaryByMoney) => {\n        const { games } = group;\n        this.balances = {};\n        this.totalGamesCounts = {};\n        this.gamesCount = {};\n        const fourMonthMinIndex = showSummaryByMoney ? maxIndex - 12  < 0 ? 0 :maxIndex - 12 : minIndex;\n        const sortedGames = games.sort((a,b)=> a.date < b.date ? -1 :1);\n        sortedGames.slice(fourMonthMinIndex, maxIndex+1).forEach(game=>{\n            game.playersData.forEach(({playerId})=>{\n                if (!this.gamesCount.hasOwnProperty(playerId)){\n                    this.gamesCount[playerId] = 0;\n                }\n                this.gamesCount[playerId] =  this.gamesCount[playerId] + (showSummaryByMoney ? 1 : (game.mvpPlayerId===playerId ? 1 : 0));\n            });\n        });\n        sortedGames.slice(minIndex, maxIndex+1).forEach(game=>{\n\n            game.playersData.forEach(({playerId, buyIn,cashOut})=>{\n\n                if (!this.balances.hasOwnProperty(playerId)){\n                    this.balances[playerId] = 0;\n                }\n                if (!this.totalGamesCounts.hasOwnProperty(playerId)){\n                    this.totalGamesCounts[playerId] = 0;\n                }\n                if (showSummaryByMoney){\n                    this.balances[playerId] =  this.balances[playerId] + cashOut - buyIn;\n                } else{\n                    this.balances[playerId] =  this.balances[playerId] + (playerId === game.mvpPlayerId ? 1 : 0);//TODO\n                }\n\n                this.totalGamesCounts[playerId] =  this.totalGamesCounts[playerId] + 1;\n            });\n        });\n        this.playersCountText = Object.keys(this.balances).length;\n\n        const playersData = Object.keys(this.gamesCount).map(id=>{\n            return {\n                id,\n                playerId: id,\n                buyIn:0,\n                cashOut: this.balances[id],\n                lastFourMonthGamesCount: this.gamesCount[id],\n                gamesCount: this.totalGamesCounts[id],\n                percentage: showSummaryByMoney ? undefined : Math.floor(this.balances[id] * 100 / this.totalGamesCounts[id])\n            }\n        }).sort((a,b)=> {\n            return a.lastFourMonthGamesCount > b.lastFourMonthGamesCount ? -1 : (a.lastFourMonthGamesCount < b.lastFourMonthGamesCount ? 1 : (a.gamesCount < b.gamesCount ? -1 : 1))\n        }).slice(0,max+1).filter(item => showSummaryByMoney ? true : item.cashOut > 0 && item.gamesCount > 0);\n\n        return {\n            playersData\n        }\n    };\n\n    updateAfterSwitch(){\n        const showSummaryByMoney = !this.state.showSummaryByMoney;\n        const Game = this.createPlayersDataAsFakeGame(this.prop.group, this.prop.playersCount, this.state.sliderValues.min, this.state.sliderValues.max, showSummaryByMoney);\n        this.setState({ Game, showSummaryByMoney });\n    }\n    constructor(props){\n        super(props);\n        this.prop = props\n        const group = props.group;\n        this.yearsObject = {};\n        group.games.sort((a,b)=>a.date < b.date ? -1 : 1).forEach((game,index)=>{\n            const year = game.date.getYear() + 1900;\n            if (!this.yearsObject[year]){\n                this.yearsObject[year] = {\n                    from: index,\n                    to: index\n                }\n            } else{\n                this.yearsObject[year].to = index;\n            }\n        });\n\n        const sliderValues ={ min: 0, max: group.games.length - 1 };\n        const Game = props.IsGroupSummary ? this.createPlayersDataAsFakeGame(props.group, props.playersCount, sliderValues.min, sliderValues.max, true): props.game;\n        this.state = { sliderValues, Game, isPlaying: false, showSummaryByMoney: true, IsGroupSummary: props.IsGroupSummary }\n    }\n\n    getPlayerImage(playerInfo, playerWidth, margin){\n        const isLoggedInPlayer = playerInfo.isMe;\n        const key = `${playerInfo.playerId}_item_image`;\n\n        const imgWidth = playerWidth - margin;\n        const imgHeight = imgWidth * 1.1;\n        const ImgStyleObject = {\n            width:imgWidth,\n            height: imgHeight,\n            marginRight:margin,\n        };\n        if (isLoggedInPlayer){\n            ImgStyleObject.border=\"1px solid yellow\"\n        }\n        const onImageError = (ev)=>{\n            if (!ev.target.secondTry){\n                ev.target.secondTry = true;\n                ev.target.src=playerInfo.imageUrl;\n            }else{\n                ev.target.src=ANON_URL;\n            }\n        };\n        const playerName = playerInfo.name;\n        const imageUrl = playerInfo.imageUrl || ANON_URL;\n        return (<img key={key}  alt={playerName} style={ImgStyleObject} className=\"GamePlayerImage\" src={imageUrl} onError={onImageError} />);\n    }\n\n    getNamesSection(playersData, playerWidth, margin, first){\n        return playersData.map(playerData=>{\n\n            const key = `${playerData.playerId}_item_name`;\n            let displayName= playerData.name.trim();\n\n            let className = \"GamePlayerDisplayName\";\n            if (displayName.indexOf(' ')>0){\n                const index = first ? 0 : 1;\n                displayName=displayName.split(' ')[index];\n            }else{\n                if (!first){\n                    displayName='----';\n                    className +=' transparentTextColor';\n                }\n            }\n\n            const styleObject = {\n                width:playerWidth-margin,\n                marginRight:margin,\n            };\n            return  (\n                <div key={key} style={styleObject} className={className}>\n                    {displayName}\n                </div>\n            );\n        });\n    }\n\n    render(){\n        const {group, IsGroupSummary, playersCount } = this.props;\n        const { Game, sliderValues, showSummaryByMoney} = this.state;\n\n        if (group.games.length  -1 < this.state.sliderValues.max){\n            sliderValues.min=0;\n            sliderValues.max=group.games.length -1;\n            const newSliderValues = {...sliderValues};\n            setTimeout(()=>{\n                this.setState({sliderValues: newSliderValues});\n            },1)\n        }\n\n\n        const {players} = group;\n        const {playersData} = Game;\n        if (playersData.length === 0) {\n            return <div> no players yet</div>\n        }\n        const playersInfo = playersData.map(playerData=>{\n            const data = { ...playerData }\n            const playerObject = players.find(player=>player.id ===data.playerId);\n            data.dif = data.cashOut-data.buyIn;\n            data.val = data.dif> 0 ?  `+${data.dif}` : `${data.dif}`;\n            data.imageUrl = playerObject.imageUrl;\n            data.isMe = playerObject.isMe;\n            data.name = playerObject.name;\n            data.gamesCount =  playerObject.gamesCount;\n            return data;\n        }).sort((a,b)=> a.dif > b.dif ? -1 : 1).filter(d=>d.gamesCount);\n        if (!playersInfo || playersInfo.length === 0){\n            return <div>No data yet</div>\n        }\n        const isMobile = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n        const margin = isMobile ? 2: 5;\n\n        const hasNegatives = playersInfo.filter(p=>p.dif<=0).length > 0;\n\n        const width = IsGroupSummary ? (isMobile ? 0.8 * Width : 0.93 * Width) : (  isMobile ? 0.80 * Width :  0.63 * Width);\n        const playerWidth = playersInfo.length < 3 ? width / 4 :  width / playersInfo.length;\n        const PlayerImages = playersInfo.map((playerInfo)=> this.getPlayerImage(playerInfo, playerWidth, margin));\n\n        const PlayerNames1 =  this.getNamesSection(playersInfo,playerWidth,margin,true);\n        const PlayerNames2 =  this.getNamesSection(playersInfo,playerWidth,margin,false);\n\n        const CurrencySign = showSummaryByMoney ? '₪' : ' out of';\n\n        const PlayerBalance = playersInfo.map(playerInfo=>{\n            const key = `${playerInfo.playerId}_item_balance`;\n            const val = IsGroupSummary ? this.balances[playerInfo.playerId] :playerInfo.val;\n            const styleObject = {\n                width:playerWidth-margin,\n                marginRight:margin,\n            };\n            return  (\n                <div key={key} style={styleObject} className=\"GamePlayerBalace\"  >\n                    <span className=\"GamePlayerBalaceCurrencySign\">{showSummaryByMoney ? '':'mvp in '}</span> {val}<span className=\"GamePlayerBalaceCurrencySign\">{CurrencySign}</span>\n                </div>\n            );\n        });\n\n        const PlayerGameCount = IsGroupSummary ? playersInfo.map(playerInfo=>{\n            const key = `${playerInfo.playerId}_item_gamesCount`;\n            const styleObject = {\n                width:playerWidth-margin,\n                marginRight:margin,\n            };\n\n\n            return  (\n                <div key={key} style={styleObject} className=\"GamePlayerGamesCount\"  >\n                    {this.totalGamesCounts[playerInfo.playerId]} games\n                </div>\n            );\n        }):[];\n        const PlayerPercentages = IsGroupSummary ? playersInfo.map(playerInfo=>{\n            const key = `${playerInfo.playerId}_item_percentage`;\n            const styleObject = {\n                width:playerWidth-margin,\n                marginRight:margin,\n            };\n            return  (\n                <div key={key} style={styleObject} className=\"GamePlayerGamesCount\"  >\n                      <div className=\"GamePlayersGamesCount\"> {`(${playerInfo.percentage}%)`} </div>\n                </div>\n            );\n        }):[];\n\n        const PlayerRankingBalance= hasNegatives ? <div/> :( playersInfo.map(playerInfo=>{\n            const key = `${playerInfo.playerId}_item_Rankingbalance`;\n\n            const styleObject = {\n                width:playerWidth-margin,\n                marginRight:margin,\n            }\n            return  (\n                <div key={key} style={styleObject} className=\"GamePlayerBalace\"  >\n                    {playerInfo.val}\n                </div>\n            );\n        }));\n\n        const maxPositive =  playersInfo[0].dif;\n\n        const positiveRatio = maxPositive === 0 ? 10 : 100/maxPositive;\n        let GamePlayerPositives = playersInfo.map((playerInfo)=>{\n\n            const key = `${playerInfo.playerId}_item_positiveDiv`;\n            let imageUrl = playerInfo.dif > 0 ? GREEN : TRANSPARENT;\n            const height =  playerInfo.dif>0 ? positiveRatio* playerInfo.dif : 150;\n            const barsStyleObject = {\n                marginTop:(150 - height),\n                width:playerWidth-margin,\n                marginRight:margin,\n                height\n            }\n\n            return  (\n                <img alt=\"\" key={key} className=\"barItemPositive\" style={barsStyleObject} src={imageUrl}  />\n            );\n        });\n        const maxNegative = playersInfo[playersInfo.length-1].dif;\n        const negativeRatio = maxNegative ===0 ? 10 :   100 / maxNegative;\n\n        let GamePlayerNegatives = playersInfo.map(playerInfo=>{\n            let imageUrl = playerInfo.dif < 0 ? RED: TRANSPARENT;\n            const key = `${playerInfo.playerId}_item_negativeDiv`;\n\n            const height = playerInfo.dif>0 ? 150 : negativeRatio* playerInfo.dif;\n\n            const barsStyleObject = {\n                marginTop:-1*(150 - height),\n                width:playerWidth-margin,\n                marginRight:margin,\n                height\n            };\n            return  (\n                <img alt=\"\" key={key} className=\"barItemNegative\" style={barsStyleObject} src={imageUrl}  />\n            );\n        });\n\n        GamePlayerPositives = (<div className=\"GamePlayerBars\" >\n            {GamePlayerPositives}\n        </div>);\n\n        GamePlayerNegatives = hasNegatives ? (<div className=\"GamePlayerBars\" >\n            {GamePlayerNegatives}\n        </div>) : <div/>\n\n\n        const playersIdsToGamesCountObjMapper = {};\n        const playersIdsToBalanceObjMapper = {};\n        const filterGames = group.games\n            .sort((a,b)=>a.date < b.date ? -1 : 1)\n            .filter((game,index) => sliderValues.min <= index && index <= sliderValues.max);\n\n        filterGames.forEach(game=>{\n            game.playersData.forEach(({playerId, buyIn,cashOut})=>{\n                if (!playersIdsToGamesCountObjMapper.hasOwnProperty(playerId)){\n                    playersIdsToGamesCountObjMapper[playerId] = 0;\n                }\n                if (!playersIdsToBalanceObjMapper.hasOwnProperty(playerId)){\n                    playersIdsToBalanceObjMapper[playerId] = 0;\n                }\n                playersIdsToGamesCountObjMapper[playerId] += 1;\n                playersIdsToBalanceObjMapper[playerId] =  playersIdsToBalanceObjMapper[playerId] + cashOut - buyIn;\n            });\n        });\n        const playersToShow = Object.keys(playersIdsToGamesCountObjMapper).map((id,index)=>{\n                const name = group.players.find(p=>p.id===id).name;\n                return {\n                    playerId:id,\n                    gamesCount:playersIdsToGamesCountObjMapper[id],\n                    name,\n                    id,\n                    balance: playersIdsToBalanceObjMapper[id],\n                }\n            }).sort((a,b)=>a.gamesCount< b.gamesCount ? 1 : -1).slice(0,playersCount).map((item,index)=>{\n                return {\n                    ...item,\n                    color:  colors[index]\n                }\n        })\n\n        const playersIdsToNameObjMapper = {};\n\n        const data = [];\n        const zeros = { name:\"\"};\n        playersToShow.forEach(playersInfo => {\n            playersIdsToNameObjMapper[playersInfo.playerId] = playersInfo.name;\n            zeros[playersInfo.name]=0;\n        });\n        data.push(zeros);\n\n        filterGames\n            .forEach((game)=>{\n                const prevData = data[data.length-1];\n                const gamePlayers = game.playersData.filter(player => playersIdsToNameObjMapper[player.playerId]).map(player => ({name: playersIdsToNameObjMapper[player.playerId], dif: player.cashOut - player.buyIn }));\n               const gameData = {\n                   name: game.date.AsGameName()\n               };\n                gamePlayers.forEach(({name,dif})=>{\n                    const prevValue = prevData[name];\n                    gameData[name] = dif + prevValue;\n                });\n\n               playersToShow.forEach(playersInfo => {\n                   if (!gameData.hasOwnProperty(playersInfo.name)){\n                       const prevValue = prevData[playersInfo.name];\n                       gameData[playersInfo.name] = prevValue;\n                   }\n               });\n\n\n\n                data.push(gameData)\n            });\n        const lines = playersToShow.map(playerInfo=> <Line key={`line${playerInfo.name}`} className=\"graphLine\" type=\"monotone\" dataKey={playerInfo.name} stroke={playerInfo.color} />);\n        const menu = playersToShow.sort((a,b)=>a.balance > b.balance ? -1 : 1).map(({id, name,color, balance})=> {\n            const style = {\n                color,\n            }\n\n            return (<div key={`menu${color}${name}`} className=\"menuItem\" style={style} > {name}: {balance} ({playersIdsToGamesCountObjMapper[id]} games) </div>);\n        });\n        const yearsButtons = Object.keys(this.yearsObject).sort().map(year=>{\n            return <button key={`year-${year}`}\n                           className=\"year-button\"\n                           onClick={()=> {\n                               const newState= { isPlaying:false, sliderValues: { min: this.yearsObject[year].from, max: this.yearsObject[year].to }};\n                               if (this.props.IsGroupSummary){\n                                   newState.Game = this.createPlayersDataAsFakeGame(this.props.group, this.props.playersCount, this.yearsObject[year].from, this.yearsObject[year].to, this.state.showSummaryByMoney );\n                               }\n                               this.setState(newState)\n                           }}>{year}</button>\n        });\n        yearsButtons.push( <button key={`all-years`}\n                                   className=\"year-button\"\n                                   onClick={()=> {\n                                       const newState= { isPlaying:false, sliderValues: { min: 0, max: group.games.length -1 }};\n                                       newState.Game = this.createPlayersDataAsFakeGame(this.prop.group, this.prop.playersCount, newState.sliderValues.min, newState.sliderValues.max, this.state.showSummaryByMoney);\n\n                                       this.setState(newState)\n                                   }}>All</button>)\n\n\n        const playStopButton = <button key={`play-all`}\n                                  className=\"year-button\"\n                                  onClick={()=> {\n                                      const newState= {};\n                                      if (!this.state.isPlaying) {\n                                          newState.sliderValues = { min: 0, max: 4 };\n                                          newState.isPlaying = true;\n                                          const update = ()=>{\n                                              const innerNewState = { sliderValues: { min: 0, max: this.state.sliderValues.max + 1 }};\n                                              if (innerNewState.sliderValues.max > group.games.length -1){\n                                                  innerNewState.sliderValues.max = 4;\n                                              }\n                                              innerNewState.Game = this.createPlayersDataAsFakeGame(group, this.props.playersCount, 0,  this.state.sliderValues.max, this.state.showSummaryByMoney );\n\n                                              if (this.state.isPlaying) {\n                                                  this.setState(innerNewState);\n                                                  setTimeout(update,70)\n                                              }\n                                          }\n\n                                          setTimeout(update,1500)\n\n\n                                      }else{\n                                          newState.isPlaying = false;\n                                      }\n                                      this.setState(newState)\n                                  }}>{ this.state.isPlaying ? 'Stop' : 'Play'}</button>\n\n        const graph = (\n            <div >\n\n                {playStopButton}\n                <LineChart className=\"gameGraphLineChart\" width={SmartPhone ? Width : Width*(88/100)} height={SmartPhone ? 260 : 500} data={data}  >\n                    <XAxis dataKey=\"name\"/>\n                    <YAxis/>\n                    <CartesianGrid strokeDasharray=\"0 40\"/>\n                    <ReferenceLine y={0} label=\"Zero\" stroke=\"red\"/>\n\n                    {lines}\n                </LineChart>\n                <div>\n                    {yearsButtons}\n                </div>\n                <div className=\"menu\">\n                     {menu}\n                </div>\n            </div>\n        );\n        const gamesDates = IsGroupSummary ? (\n            <div className=\"black\" >\n            {sliderValues.max - sliderValues.min +1 } games ({group.games[sliderValues.min].date.AsGameName()} - {group.games[sliderValues.max].date.AsGameName()})\n        </div>):<div/>;\n\n        let playersCountText = IsGroupSummary ?  this.playersCountText : playersData.length;\n        return (\n            <div className={`allPlayersSummary ${IsGroupSummary ? 'groupSummary': ''}`}\n\n            >\n\n                {\n                    (this.props.IsGroupSummary && (sliderValues.min > 0 || sliderValues.max < this.props.group.games.length-1)) &&\n                    <div className=\"black\">\n                        <b>(filtered data)</b>\n                    </div>\n                }\n                {gamesDates}\n                <div className=\"black\">\n                    { playersCountText } players\n                </div>\n\n                <div>\n                  <span className=\"white\">xx</span>\n                </div>\n\n                <div className=\"GamePlayerNames\">\n                    {PlayerNames1}\n                </div>\n\n                <div className=\"GamePlayerNames\">\n                    {PlayerNames2}\n                </div>\n\n                <div className=\"GamePlayerImages\">\n                    {PlayerImages}\n                </div>\n                <div className=\"GamePlayerBalance\">\n                    {PlayerBalance}\n                </div>\n                {IsGroupSummary ?<div className=\"GamePlayersGamesCount\"> {PlayerGameCount} </div> : <div/> }\n                {IsGroupSummary && !showSummaryByMoney ? <div className=\"GamePlayersGamesCount\"> {PlayerPercentages} </div> : <div/> }\n                <br/>\n                <br/>\n                {GamePlayerPositives}\n                {PlayerRankingBalance}\n                {GamePlayerNegatives}\n\n                <div>\n                    {this.state.IsGroupSummary ? <button onClick={()=>this.updateAfterSwitch()}> { this.state.showSummaryByMoney ? 'switch to games won mode':'switch back'}</button> : <span></span>}\n                </div>\n                <hr/>\n                { IsGroupSummary && group.games.length>0 && (\n                    <div className=\"black\">\n                        <div\n\n                        ><b>Date range specific data:</b><br/></div>\n                        <div>From { group.games[sliderValues.min].date.AsGameName()} to { group.games[sliderValues.max].date.AsGameName()}</div>\n                        <div>\n                            <InputRange className=\"InputRange\"\n                                        step={1}\n                                        formatLabel={() => ``}\n                                        maxValue={ group.games.length - 1}\n                                        minValue={0}\n                                        value={sliderValues}\n                                        onChange={sliderValues => {\n                                            if (sliderValues.min < sliderValues.max){\n                                                const newState = { sliderValues };\n                                                if (IsGroupSummary){\n                                                    newState.Game = this.createPlayersDataAsFakeGame(group, this.props.playersCount, sliderValues.min, sliderValues.max, this.state.showSummaryByMoney);\n                                                }\n                                                this.setState(newState);\n                                            }\n                                        }} />\n                        </div>\n                        <div>\n                            {graph}\n                        </div>\n\n\n                    </div>)\n                }\n\n                {!IsGroupSummary &&\n                <ImageSlider group={group} gameId={Game.id}/>\n                }\n            </div>\n        );\n\n\n    }\n}\n\nexport default GameData;\n\n","import React from 'react'\nimport _ from \"lodash\";\n\nfunction getMappings (positivePlayers, negativePlayers){\n    //console.log('getMappings ', positivePlayers.length,negativePlayers.length);\n    if (positivePlayers.length === 0 || negativePlayers.length===0){\n        return []\n    }\n    if (positivePlayers.length === 1 && negativePlayers.length===1){\n        if (positivePlayers[0].balance === negativePlayers[0].balance){\n            return [{\n                from: negativePlayers[0],\n                to: positivePlayers[0],\n                amount: negativePlayers[0].balance\n            }];\n        } else{\n            console.log('positivePlayers',positivePlayers);\n            console.log('negativePlayers',negativePlayers);\n            throw new Error('WTF, this does not make sense',)\n        }\n    }\n\n    const intersection = _.intersectionBy(negativePlayers, positivePlayers, 'balance');\n    const mapping = [];\n    if (intersection && intersection.length > 0){\n        for (const negativePlayer of intersection){\n            const negative = negativePlayers.find(p => p.balance === negativePlayer.balance);\n            const positive = positivePlayers.find(p => p.balance === negativePlayer.balance);\n            if (negative && positive){\n                mapping.push({\n                    from: negative,\n                    to: positive,\n                    amount: positive.balance\n                });\n                negativePlayers = negativePlayers.filter(p => p.id !== negativePlayer.id);\n                positivePlayers = positivePlayers.filter(p => p.id !== positive.id);\n            }\n        }\n    }\n\n    negativePlayers = negativePlayers.sort((a,b)=> a.balance < b.balance ? -1 : 1);\n    positivePlayers = positivePlayers.sort((a,b)=> a.balance < b.balance ? -1 : 1);\n\n    const firstNegative = negativePlayers[0];\n    const firstPositive = positivePlayers[0];\n    if (firstNegative.balance > firstPositive.balance){\n        // firstNegative = 40\n        // firstPositive = 30\n        mapping.push({\n            from: firstNegative,\n            to: firstPositive,\n            amount: firstPositive.balance\n        });\n        positivePlayers = positivePlayers.filter(p => p.id !== firstPositive.id);\n        negativePlayers = negativePlayers.map(p => {\n            if (p.id !== firstNegative.id){\n                return p;\n            } else{\n                return { ...p, balance: firstNegative.balance - firstPositive.balance}\n            }\n        });\n\n    } else if (firstNegative.balance < firstPositive.balance){\n        // firstNegative = 30\n        // firstPositive = 40\n        mapping.push({\n            from: firstNegative,\n            to: firstPositive,\n            amount: firstNegative.balance\n        });\n        negativePlayers = negativePlayers.filter(p => p.id !== firstNegative.id);\n\n        positivePlayers = positivePlayers.map(p => {\n            if (p.id !== firstPositive.id){\n                return p;\n            } else{\n                return { ...p, balance: firstPositive.balance - firstNegative.balance}\n            }\n        });\n    }\n\n    return [...mapping, ...getMappings(positivePlayers, negativePlayers)];\n\n}\nfunction getWhoOweWhoMapping(game, group){\n    const gamePlayersData = game.playersData.map(player=>{\n        const data = group.players.find(p=> p.id === player.playerId);\n        return {\n            id: player.playerId,\n            name: data.name,\n            imageUrl: data.imageUrl,\n            cashOut: player.cashOut,\n            buyIn: player.buyIn,\n            balance:  player.cashOut -  player.buyIn\n        }\n    });\n\n    const positivePlayers = gamePlayersData.filter(player => player.balance > 0).sort((a,b)=> a.balance < b.balance ? -1 : 1);\n    const negativePlayers = gamePlayersData.filter(player => player.balance < 0).map(player => ({...player, balance: -1 * player.balance})).sort((a,b)=> a.balance < b.balance ? -1 : 1);\n    console.log('positivePlayers',positivePlayers);\n    console.log('negativePlayers',negativePlayers);\n    const mapping = getMappings(positivePlayers, negativePlayers).sort((a,b)=> {\n        if (a.from.id < b.from.id) {\n            return -1;\n        } else if (a.from.id > b.from.id){\n            return 1\n        } else{\n            return (a.amount < b.amount ? -1 : 1);\n        }\n    });\n   // console.log('result mapping', mapping.map(item=>`from ${item.from.name} to ${item.to.name}: ${item.amount}`))\n    return mapping;\n}\n\nconst WhoOwesWho = (props) => {\n    console.log('WW props',props)\n    const {game, group} = props;\n    const mappings = getWhoOweWhoMapping(game, group);\n    return (\n        <div>\n            {mappings.map(item=> {\n                return <div className='from-to-row' key={`_from_${item.from.id}_to${item.to.id}`}> <b> {item.from.name} </b> should give <b> {item.amount}₪ </b> to <b> {item.to.name} </b> </div>\n            })}\n        </div>\n\n    )\n}\n\nexport default WhoOwesWho;\n","\nimport React, { Component } from 'react';\nimport GameData from './GameData';\nimport WhoOwesWho from '../containers/WhoOwesWho';\nimport CONSTS from '../CONSTS';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport RedBubbleButton from '../containers/RedBubbleButton';\nconst { ANON_URL } = CONSTS;\nclass GameSummary extends Component {\n\n    showWhoOwesWho = ()=>{\n        this.setState({ shouldShowWhoOwesWho: !this.state.shouldShowWhoOwesWho })\n    }\n    constructor(props){\n        super(props);\n        console.log('gamesummary ctor',props);\n        const { group, game } = props;\n        const { isAdmin} = group;\n\n\n        this.state = {shouldShowWhoOwesWho: false}\n\n        const gamePlayersData =  game.playersData.map(player=>{\n            const data =  group.players.find(p=> p.id === player.playerId);\n            return {\n                id: player.playerId,\n                name: data.name,\n                imageUrl: data.imageUrl,\n                cashOut: player.cashOut,\n                buyIn: player.buyIn,\n                balance:  player.cashOut -  player.buyIn\n            }\n        }).sort((a,b)=> a.name < b.name ? -1 : 1).map(((player,index) =>{\n\n            const onImageError = (ev)=>{\n                if (!ev.target.secondTry){\n                    ev.target.secondTry = true;\n                    ev.target.src= player.imageUrl;\n                }else{\n                    ev.target.src=ANON_URL;\n                }\n            };\n            return (<div className=\"gamePlayerData col-xs-11 col-lg-2 row\" key={`gamePlayerData${player.id}`}>\n                <div  className=\"col-xs-3\">\n                    <img alt={player.name} className=\"gamePlayerDataImage\" src={player.imageUrl || ANON_URL}  onError={onImageError} />\n                </div>\n                <div  className=\"col-xs-8\">\n                    <div>\n                        { player.name}\n                    </div>\n                    <div>\n                        buy-in: {player.buyIn}\n                    </div>\n                    <div>\n                        cash-out: {player.cashOut}\n                    </div>\n                    <div>\n                        bottom-line: {player.balance}\n                    </div>\n                </div>\n\n            </div>);\n        }))\n        this.game = game;\n        this.gamePlayersData = gamePlayersData;\n        this.isAdmin = isAdmin;\n    }\n    getGamePot = (game)=>{\n        return game.playersData.reduce((all, one)=>{\n            return all + one.buyIn;\n        }, 0);\n    }\n\n    gameDateToString = (game)=>{\n        const addLeaddingZero = (num)=>{\n            const str = `${num}`;\n            if (str.length === 2){\n                return str;\n            } else{\n                return `0${str}`;\n            }\n        };\n\n        const isoDate = typeof  game.date === 'string' ? game.date.substr(0,10) :  game.date.toISOString();\n        const year = parseInt(isoDate.substr(0, 4), 10);\n        const month = addLeaddingZero(parseInt(isoDate.substr(5, 2), 10));\n        const day = addLeaddingZero(parseInt(isoDate.substr(8, 2), 10));\n\n        return `${day}/${month}/${year}`;\n    }\n    render(){\n        const group = this.props.group;\n        const game = this.game;\n        const gamePlayersData = this.gamePlayersData;\n        const isAdmin = this.isAdmin;\n\n        return (\n            <div id=\"gameSummary\">\n                <div id=\"gameSummaryHeader\">\n                    <GrayBubbleButton onClick={this.props.back} className=\"button\">Back</GrayBubbleButton>\n                    <div>\n                        <b><u>Game summary</u></b>\n                    </div>\n                    <div>\n                        Date: {this.gameDateToString(game)}\n                    </div>\n                    <div>\n                        {game.description}\n                    </div>\n                    <div>\n                        Pot size:  {this.getGamePot(game)}\n                    </div>\n                </div>\n\n                <GameData group={group} game={game}  />\n\n                {isAdmin && <GrayBubbleButton onClick={this.props.edit} className=\"button left-margin\">Edit</GrayBubbleButton>}\n                {isAdmin && <RedBubbleButton onClick={this.props.delete} className=\"button left-margin\">Delete</RedBubbleButton>}\n                <GrayBubbleButton onClick={this.showWhoOwesWho} className=\"button left-margin\"> {this.state.shouldShowWhoOwesWho ? 'Hide' :'Show'} Who Owes Who</GrayBubbleButton>\n                { this.state.shouldShowWhoOwesWho && <WhoOwesWho group={group} game={game} /> }\n                <div className=\"more-data-text\"><u>more data:</u></div>\n                <div id=\"gamePlayersData\" className=\"row\">\n\n                    {gamePlayersData}\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default GameSummary;\n","import request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function deleteImage(imageId, provider, token) {\n\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'DELETE',\n      url: `${URL_PREFIX}/images/${imageId}`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to delete image');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to delete image');\n        return reject(bodyObj.title);\n      }\n      return resolve(true);\n    });\n  });\n}\n\nexport default deleteImage;\n","/* eslint-disable no-restricted-globals */\n\nimport React, { Component } from 'react';\nimport deleteImage from '../actions/deleteImage';\nimport ShowErrorAlert from '../containers/ShowErrorAlert';\nimport ShowSuccessAlert from '../containers/ShowSuccessAlert';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport RedBubbleButton from '../containers/RedBubbleButton';\nclass ImageData extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { showErrorOnDeleteImage: null,showSuccessDeleteImage: null };\n    }\n\n    removeImage = ()=>{\n        if (confirm(\"Are you sure?\")){\n            const { id: imageId, close, provider, token, removeImage} = this.props;\n            deleteImage(imageId, provider, token).then(()=>{\n                this.setState({ showSuccessDeleteImage: true});\n                setTimeout(()=>{\n                    this.setState({ showSuccessDeleteImage: null});\n                    removeImage(imageId);\n                    close();\n                },100)\n            }).catch((e)=>{\n                this.setState({ showErrorOnDeleteImage: true});\n                setTimeout(()=>{\n                    this.setState({ showErrorOnDeleteImage: null});\n                    close();\n                },100)\n            })\n        }\n    }\n    render() {\n        const { showErrorOnDeleteImage,showSuccessDeleteImage } = this.state;\n       const { image, group, uploadedByName, uploadedById, playerIds, gameIds, user} = this.props;\n       const curentUserId = user.id;\n       let isAdmin = false;\n       if (group && user && user.groups && user.groups[group.id]){\n           isAdmin = user.groups[group.id].isAdmin;\n       }\n       const canDelete = isAdmin || curentUserId === uploadedById;\n        console.log('user',user)\n       const game = group.games.find(g=>g.id === gameIds[0]);\n       const gameDate = game ? game.date.AsGameName() : 'unknown';\n\n       let players = group.players.filter(p => playerIds.includes(p.id));\n       players = players.map(p=>{\n           return <li key={`taged_players_${p.id}`}> {p.name}</li>\n       })\n       return (\n            <div id=\"image-data\">\n                <div className=\"image-data-item\">\n                    <div>\n                        <img alt=\"image\" id=\"image-data-preview\" src={image}/>\n                    </div>\n                    <div>\n                        Uploaded by: {uploadedByName}\n                    </div>\n                    <hr/>\n                    <div>\n                        <b><u>Tags:</u></b>\n                        <div>\n                            Group: {group.name}\n                        </div>\n                        <div>\n                            Game: {gameDate}\n                        </div>\n                        <div>\n                            Players:\n                        </div>\n                        <div>\n                            <ul> {players} </ul>\n\n                        </div>\n                        <div>\n                            <GrayBubbleButton className=\"close-button\" onClick={this.props.close} >back</GrayBubbleButton>\n                        </div>\n                        <div>\n                            <RedBubbleButton disabled={!canDelete} className=\"delete-image-button\" onClick={this.removeImage} >DELETE IMAGE</RedBubbleButton>\n                        </div>\n                    </div>\n\n\n                </div>\n                { showErrorOnDeleteImage && <ShowErrorAlert message={\"failed to remove image\"}/>}\n\n                { showSuccessDeleteImage && <ShowSuccessAlert message={\"image was removed\"}/>}\n            </div>\n        );\n\n    }\n}\n\nexport default ImageData;\n\n","import request from 'request';\nimport URL_PREFIX from '../url';\nimport resizebase64 from 'resize-base64';\n\nasync function postImage(base64image, tags, provider, token) {\n\n  try {\n    console.log('before',base64image)\n    base64image = resizebase64(base64image,600, 600);\n    console.log('after',base64image)\n  } catch (e) {\n    console.log('error!!',e)\n  }\n\n  const { playerIds, gameIds, groupIds } = tags;\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'POST',\n      url: `${URL_PREFIX}/images`,\n      body: JSON.stringify({\n        playerIds: playerIds || [],\n        gameIds: gameIds || [],\n        groupIds: groupIds || [],\n        image: base64image,\n      }),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to post image');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to post image');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default postImage;\n","\nimport React, { Component } from 'react';\nimport ImageData from './ImageData';\nimport ImageUploader from \"./ImageUploader\";\nimport postImage from \"../actions/postImage\";\n\nclass ImagesTab extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { selectedImage: null, showImageUploader: false };\n    }\n\n    showImageUploaderForm = ()=>{\n       this.setState({ showImageUploader: true});\n    }\n\n    hideImageUploaderForm = ()=>{\n        this.setState({ showImageUploader: false});\n    }\n\n    enterImagePage = (image) =>{\n        this.setState({selectedImage:image});\n    }\n\n    closeImagePage = () =>{\n        this.setState({selectedImage:null});\n    }\n\n    uploadImage = async (image, tags) =>{\n        return postImage(image, tags, this.props.provider, this.props.token);\n    }\n\n    render() {\n        const { group } = this.props;\n        if (this.state.selectedImage){\n            return <ImageData group={group}\n                              close={this.closeImagePage}\n                              user={this.props.user}\n                              {...this.state.selectedImage}\n                              provider={this.props.provider}\n                              removeImage={this.props.removeImage}\n                              token={this.props.token}/>\n        }\n        if (this.state.showImageUploader){\n\n            return <ImageUploader group={group}  close={this.hideImageUploaderForm} uploadImage={this.uploadImage} updateImage={this.props.updateImage}/>\n        }\n\n\n        const {images} = group;\n        const IMAGES = images.map((image) => {\n            return (\n                <div key={`${image.id}`} className=\"image-item-div\" onClick={()=>{this.enterImagePage(image)}}>\n                    <img key={`${image.id}__`} className=\"image-item-div-innerimg\" alt={`uploaded by ${image.uploadedByName}`} src={image.image}/>\n                </div>\n            );\n        })\n\n        return <div className=\"row\">\n            <div className=\"col-xs-6\">\n                <div className=\"image-item-div\"\n                     onClick={this.showImageUploaderForm}>\n                    <img src=\"plus.png\" key=\"plus\" className=\"image-item-div-plus-sign\"/>\n\n                </div>\n            </div>\n            {IMAGES}\n        </div>;\n\n    }\n}\n\nexport default ImagesTab;\n\n","\nimport React, { Component } from 'react';\nimport CONSTS from '../CONSTS';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport RedBubbleButton from '../containers/RedBubbleButton';\nconst { ANON_URL } = CONSTS;\nclass OnGoingGame extends Component {\n\n    createPlayerRow = (playerData) =>{\n        const { game, group: { players: groupPlayers }  } = this.props;\n        const playersCount = game.playersData.length;\n\n        const { buyIn, cashOut, playerId} = playerData;\n        const { name, imageUrl='' } = groupPlayers.find(p=>p.id === playerId);\n        const bottomLine = (parseInt(cashOut, 10) - parseInt(buyIn, 10));\n        const buyInValue = `${buyIn>0?'+':''}${buyIn}₪`;\n        const cashOutValue = `${cashOut>0?'+':''}${cashOut}₪`;\n        const bottomLineValue = `${bottomLine>0?'+':''}${bottomLine}₪`;\n\n        const onImageError = (ev)=>{\n            if (imageUrl && imageUrl.length>1 && !ev.target.secondTry){\n                ev.target.secondTry = true;\n                ev.target.src=imageUrl;\n            }else{\n                ev.target.src=ANON_URL;\n            }\n        };\n\n        let imgHeight = (60 / playersCount)-0.5;\n        imgHeight = imgHeight>16 ? 15 : imgHeight;\n        const imageStyle = {height: `${imgHeight}vh`};\n        return (\n            <div className=\"col-xs-12 activeGamePlayerRow\">\n                <div className=\"col-xs-2 col-md-1\">\n                     <img alt={name} className=\"activeGameImage\" style={imageStyle}  src={imageUrl || ANON_URL}  onError={onImageError} />\n                </div>\n                <div className=\"col-xs-4 col-md-5 centeredText\">\n                    { name }\n                </div>\n                <div className=\"col-xs-2\"> {buyInValue}</div>\n                <div className=\"col-xs-2\"> {cashOutValue}</div>\n                <div className={`col-xs-2 ${bottomLine>0?'balanceWithCurrencyPositive':'balanceWithCurrencyNegative'}`}> {bottomLineValue}</div>\n            </div>\n        );\n    }\n\n    getPlayersDataAsList = () =>{\n        const { game, group: { players:  groupPlayers}} = this.props;\n        const players = game.playersData.map(player=>{\n            const { name, imageUrl } = groupPlayers.find(p=>p.id === player.playerId);\n            return {...player, name, imageUrl }\n        }).sort((a,b) => a.index < b.index ? -1 : 1).map((player, index)=>{\n            const onImageError = (ev)=>{\n                if (player.imageUrl && player.imageUrl.length>1 && !ev.target.secondTry){\n                    ev.target.secondTry = true;\n                    ev.target.src=player.imageUrl;\n                }else{\n                    ev.target.src=ANON_URL;\n                }\n            };\n            const image =  <img alt={player.name} className=\"activeGameCircleImage\" src={player.imageUrl || ANON_URL}  onError={onImageError} />\n            const positive = player.cashOut - player.buyIn > 0;\n            const balance =  `${positive ? '+':''}${player.cashOut - player.buyIn}₪`;\n            //cashOuts\n            const inOuts = player.extra ? [\n                ...(player.extra.buyIns || []).map(bi=> ({ time:bi.time, text: `${bi.time.AsExactTime(2)} +${bi.amount}₪ buy in`})),\n                ...(player.extra.cashOuts || []).map(co=> ({ time:co.time, text: `${co.time.AsExactTime(2)} +${co.amount}₪ cash out`}))\n            ].sort((a,b) => a.time < b.time ? -1 : 1) : [];\n            return  (<div key={`player${index}`} className=\"mobile-player\">\n\n                        {image}\n                        <span className=\"margin-both-sides\">{player.name}:</span>\n\n                         {inOuts.map(item => (<div key={`${player.name}-${item.time}-${item.text}`} className=\"gray\">{item.text}  </div>))}\n                         bottom line:  {balance}\n\n            </div>);\n        });\n\n        let inouts = game.playersData.map(player=>{\n            const { name, imageUrl } = groupPlayers.find(p=>p.id === player.playerId);\n            return {...player, name, imageUrl };\n        }).map((player)=>{\n            const onImageError = (ev)=>{\n                if (player.imageUrl && player.imageUrl.length>1 && !ev.target.secondTry){\n                    ev.target.secondTry = true;\n                    ev.target.src=player.imageUrl;\n                }else{\n                    ev.target.src=ANON_URL;\n                }\n            };\n            const image =  <img alt={player.name} className=\"activeGameCircleImage\" src={player.imageUrl || ANON_URL}  onError={onImageError} />\n            //cashOuts\n            const inOuts = player.extra ? [\n                ...(player.extra.buyIns || []).map(bi=> ({ time:bi.time, image, timeText:bi.time.AsExactTime(2), text: `${player.name} added +${bi.amount}₪`})),\n                ...(player.extra.cashOuts || []).map(co=> ({ time:co.time, image, timeText:co.time.AsExactTime(2), text: `${player.name} took ${co.amount}₪`}))\n            ] : [];\n           return inOuts;\n        });\n        inouts = inouts.reduce((all,item)=>{\n            return [...all,...item]\n        }, []).sort((a,b) => a.time < b.time ? -1 : 1).map((item,index) => (<div className=\"inout-border\" key={`${index}-itemm`} >{item.timeText} {item.image} {item.text}</div>));\n\n        return (\n            <div className=\"mobile-players\">\n                {players}\n\n                <hr/>\n                {inouts}\n            </div>);\n    }\n\n    getAsPokerTable = () =>{\n        const { game, group: { players:  groupPlayers}} = this.props;\n        const players = game.playersData.map(player=>{\n            let all = player.buyIn;\n            const bluesCount =  Math.floor(all/50);\n            const hasBlue = bluesCount>0;\n            all -= 50 * bluesCount;\n            const greensCount = Math.floor(all/25);\n            const hasGreen = greensCount>0;\n            all -= 25 * greensCount;\n\n            const blacksCount =  Math.floor(all/10);\n            const hasBlack = blacksCount>0;\n            all -= 10 * blacksCount;\n\n            const redsCount =  Math.floor(all/5);\n            const hasRed = redsCount>0;\n\n            all -= 5 * redsCount;\n            const greysCount = all;\n            const hasGrey = greysCount >0;\n            const { name, imageUrl } = groupPlayers.find(p=>p.id === player.playerId);\n            return {...player, hasBlue, bluesCount,hasGreen, greensCount,hasBlack, blacksCount,hasRed, redsCount,hasGrey, greysCount, name, imageUrl}\n        }).map((player, index)=>{\n            const onImageError = (ev)=>{\n                if (player.imageUrl && player.imageUrl.length>1 && !ev.target.secondTry){\n                    ev.target.secondTry = true;\n                    ev.target.src=player.imageUrl;\n                }else{\n                    ev.target.src=ANON_URL;\n                }\n            };\n            const image =  <img alt={player.name} className=\"activeGameCircleImage\" src={player.imageUrl || ANON_URL}  onError={onImageError} />\n            const positive = player.cashOut - player.buyIn > 0;\n            const balance = player.cashOut ? `${positive ? '+':''}${player.cashOut - player.buyIn}₪` : '';\n                return  (<div key={`player${index}`}>\n                        <div className={`player player-${(index + 1)}`}>\n                            <div className=\"balance-value\">{balance}</div>\n                           <div className=\"bank\">\n                               <div className=\"bank-value\">{ player.buyIn}</div>\n                               {player.hasBlue ? <div className=\"jetons v-50\">x{player.bluesCount}</div> :<div/>}\n                               {player.hasGreen ?<div className=\"jetons v-25\">x{player.greensCount}</div> :<div/>}\n                               {player.hasBlack ?<div className=\"jetons v-10\">x{player.blacksCount}</div> :<div/>}\n                               {player.hasRed ?<div className=\"jetons v-5\">x{player.redsCount}</div> :<div/>}\n                               {player.hasGrey ?<div className=\"jetons v-1\">x{player.greysCount}</div> :<div/>}\n                           </div>\n                           <div className=\"avatar\">{image}</div>\n                           <div className=\"name\">{player.name.split(' ')[0]}</div>\n\n                        </div>\n                    </div>);\n        });\n\n       return (\n           <div className=\"vue-container\">\n               <div className=\"table\">\n                   <div className=\"players\">\n                       {players}\n                   </div>\n                </div>\n           </div>);\n    };\n\n    onEditClicked = ()=>{\n        this.props.onGameEditClick();\n    }\n    onBackClicked = ()=>{\n        if ( this.interval ){\n            clearInterval(this.interval);\n            this.interval = null;\n        }\n        this.props.onBack();\n    };\n\n    render = () =>{\n\n\n        const {onBack, game, group} = this.props;\n        const {isAdmin} = group;\n        if (!game){\n            return (\n                <div>\n                    no game\n                    <div className=\"backButton\">\n                        <GrayBubbleButton className=\"button\" onClick={onBack}> Back</GrayBubbleButton>\n                    </div>\n                </div>);\n        }\n        const totalCashouts = game.playersData.map(pd=>pd.cashOut).reduce((total, num)=>  total + num, 0);\n        const totalBuyIn = game.playersData.map(pd=>pd.buyIn).reduce((total, num)=>  total + num, 0);\n\n        const players =  this.getAsPokerTable() ;\n        const mobilePlayers = this.getPlayersDataAsList()\n        const isMobile = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n        if (!isMobile && !this.interval ){\n            this.interval = setInterval(this.props.updateOnProgressGame,5000);\n            setTimeout(()=>{\n                console.log('going to show the game now..');\n                document.getElementById(\"ongoingGameTopBuffer\").scrollIntoView();\n            } ,1000)\n        }\n\n        return (\n            <div className=\"viewGamePopupInner\" >\n                <div id=\"ongoingGameTopBuffer\" > </div>\n                <div >\n                    <h3 >Ongoing game..  {(typeof game.date === 'string' ? new Date(game.date) : game.date).AsGameName()}</h3>\n                    <h4>{game.playersData.length} Players. {game.description} </h4>\n                    <br/>\n                    <div className=\"backButton\">\n                        <GrayBubbleButton className=\"button \" onClick={this.onBackClicked}> Back</GrayBubbleButton>\n                        <GrayBubbleButton className=\"button left-margin\" onClick={this.onEditClicked}> Edit</GrayBubbleButton>\n                        {isAdmin && <RedBubbleButton onClick={this.props.deleteSelectedGame} className=\"button left-margin\">Delete</RedBubbleButton>}\n\n                        { isMobile ? <div className=\"potInTheMiddle\">{totalBuyIn-totalCashouts}₪ In Pot</div> : <div/>}\n                    </div>\n                    <div className=\"backButton\">\n                        { !isMobile ? <GrayBubbleButton className=\"button\" onClick={()=>{  document.getElementById(\"ongoingGameTopBuffer\").scrollIntoView(); }}> Focus On Table</GrayBubbleButton> :<div></div>}\n                    </div>\n\n                </div>\n                { isMobile ? mobilePlayers : players}\n                { isMobile ? <div/> : <div className=\"potInTheMiddle\">{totalBuyIn-totalCashouts}₪ In Pot</div>}\n\n\n            </div>);\n\n    }\n}\n\nexport default OnGoingGame;\n\n","import React, { Component } from 'react';\nimport ShowErrorAlert from '../containers/ShowErrorAlert';\nimport ShowSuccessAlert from '../containers/ShowSuccessAlert';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\n\nclass NewGameForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            newGame: props.newGame,\n            showError: null,\n            showSuccess: null\n        }\n    }\n\n    handleNewGameDateChange = (event) =>{\n        const newGame = { ...this.state.newGame, date: event.target.value };\n        this.setState({newGame});\n    };\n\n    handleNewGameDescriptionChange = (event) =>{\n        const newGame = { ...this.state.newGame, description: event.target.value };\n        this.setState({newGame});\n    };\n\n    createNewGame = () => {\n        const { group, provider, token, remoteCreateGame, updateGroupGame } = this.props;\n        const game = {\n            date: `${this.state.newGame.date}T20:00:00.000Z`,\n            description: this.state.newGame.description,\n            playersData:[]\n        };\n        remoteCreateGame(group.id, game, provider, token).then((g)=>{\n            updateGroupGame(g);\n            console.log('create game was ok')\n            this.setState({ showSuccess: true});\n            setTimeout(()=>{\n                this.setState({ showSuccess: null});\n                this.props.close();\n            },10)\n        }).catch((e)=>{\n            console.log('create game was NOT ok',e)\n            this.setState({ showError: true});\n            setTimeout(()=>{\n                this.setState({ showError: null});\n                this.props.close();\n            },10)\n        })\n    }\n\n    render(){\n        const { showError, showSuccess} = this.state;\n        const legal = this.state.newGame.date && this.state.newGame.date.length === 10;\n        return (<div id=\"new-game-form\">\n            <h2> Create a new game. </h2>\n            <div className=\"new-game-section\">\n                Game date:\n                <input  className=\"left-margin\" type=\"date\" id=\"newGameDate\" min=\"2010-01-01\" max=\"2050-01-01\" value={this.state.newGame.date} onChange={this.handleNewGameDateChange}/>\n            </div>\n            <div className=\"new-game-section\">\n                description:\n                <input  type=\"text\" id=\"newGameExtra\" className=\"bordered-input left-margin left-pad\" value={this.state.newGame.description} onChange={this.handleNewGameDescriptionChange}/>\n            </div>\n            <div className=\"new-game-section\">\n\n                <GrayBubbleButton className=\"left-margin\"  onClick={this.props.close}> Cancel </GrayBubbleButton>\n                <GreenBubbleButton className=\"left-margin\"  onClick={this.createNewGame} disabled={!legal}> Create </GreenBubbleButton>\n            </div>\n\n            { showError && <ShowErrorAlert message={\"failed to create new game\"}/>}\n            { showSuccess && <ShowSuccessAlert message={\"game created successfully\"}/>}\n        </div>);\n    }\n}\n\nexport default NewGameForm;\n","import React, { Component } from 'react';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nimport CONSTS from '../CONSTS';\nimport postImage from \"../actions/postImage\";\nimport ImageUploader from \"./ImageUploader\";\nimport ShowErrorAlert from '../containers/ShowErrorAlert';\nimport ShowSuccessAlert from '../containers/ShowSuccessAlert';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\n\nconst { ANON_URL } = CONSTS;\n\nclass EditGameForm extends Component {\n\n    constructor(props) {\n        super(props);\n        const existingPlayerId = this.findPlayerNotInGame(props.editGame);\n        this.state = {\n            editGame: props.editGame,\n            existingPlayerId,\n            gameSummary: null,\n            editPlayerInGame: null,\n            imageUploaderData: null,\n            showError: null,\n            showSuccess: null,\n        }\n    }\n\n    updateSelectedGamePlayerData = ()=>{\n        const editGame = {...this.state.editGame};\n        const { playerId, cashOut, buyIn } = this.state.editPlayerInGame;\n\n        editGame.playersData = editGame.playersData.map(pd => {\n            if (pd.playerId !== playerId) return pd;\n            return {...pd, cashOut, buyIn };\n        });\n        console.log('updateSelectedGamePlayerData', editGame)\n        this.setState({editGame,editPlayerInGame:null});\n    }\n\n    getEditPlayerInGame = ()=>{\n        const game = this.state.editGame;\n        const { playerId, buyIn } = this.state.editPlayerInGame;\n        const player = this.props.group.players.find(p=>p.id===playerId);\n\n        const onImageError = (ev)=>{\n            if (!ev.target.secondTry){\n                ev.target.secondTry = true;\n                ev.target.src= player.imageUrl;\n            }else{\n                ev.target.src=ANON_URL;\n            }\n        };\n\n        const image = <img alt={player.name} className=\"playersListImageBig\" src={player.imageUrl || ANON_URL}  onError={onImageError} /> ;\n        const currentPlayerBuyIn = buyIn;\n        const maxBuyInRange = currentPlayerBuyIn+100;\n        const totalBuyIn = game.playersData.map(data=> data.buyIn).reduce((all,item)=>(all+item),0);\n\n        const maxCashOutRange = (totalBuyIn);\n\n        return (<div className=\"edit-player-in-game\">\n            <div>\n                <h1>{image}{player.name}</h1>\n            </div>\n            <hr/>\n            <div>\n                buy-in:   <input className=\"editPlayerInput\" type=\"number\"  id=\"buyIn\"\n                                 value={this.state.editPlayerInGame.buyIn}\n                                 onChange={(event)=>{\n                                     const editPlayerInGame = {...this.state.editPlayerInGame};\n                                     editPlayerInGame.buyIn=parseInt(event.target.value, 10);\n                                     this.setState({ editPlayerInGame });\n                                 }}/>\n\n                <GrayBubbleButton className=\"button left-margin\" onClick={()=>{\n                    const editPlayerInGame = {...this.state.editPlayerInGame};\n                    editPlayerInGame.buyIn -= 10;\n                    if (editPlayerInGame.buyIn < 0){\n                        editPlayerInGame.buyIn = 0;\n                    }\n                    this.setState({ editPlayerInGame });\n                }}> -10 </GrayBubbleButton>\n                <GrayBubbleButton className=\"button left-margin\" onClick={()=>{\n                    const editPlayerInGame = {...this.state.editPlayerInGame};\n                    editPlayerInGame.buyIn += 10;\n                    this.setState({ editPlayerInGame });\n                }}> +10 </GrayBubbleButton>\n                <br/>\n                <br/>\n                <InputRange className=\"InputRange\"\n                            step={10}\n                            formatLabel={value => `${value}₪`}\n                            maxValue={maxBuyInRange}\n                            minValue={0}\n                            value={this.state.editPlayerInGame.buyIn}\n                            onChange={(buyIn) => {\n                                const editPlayerInGame = {...this.state.editPlayerInGame};\n                                editPlayerInGame.buyIn=buyIn;\n                                this.setState({ editPlayerInGame });\n                            }} />\n\n                <br/>\n                <br/>  <br/>\n                <br/>\n            </div>\n            <div>\n                cash-out:  <input className=\"editPlayerInput\" type=\"number\"  id=\"cashOut\"\n                                  value={this.state.editPlayerInGame.cashOut}\n                                  onChange={(event)=>{\n                                      const editPlayerInGame = {...this.state.editPlayerInGame};\n                                      editPlayerInGame.cashOut=parseInt(event.target.value, 10);\n                                      this.setState({ editPlayerInGame });\n                                  }}/>\n\n                <GrayBubbleButton className=\"button left-margin\" onClick={()=>{\n                    const editPlayerInGame = {...this.state.editPlayerInGame};\n                    editPlayerInGame.cashOut -= 10;\n                    if (editPlayerInGame.cashOut < 0){\n                        editPlayerInGame.cashOut = 0;\n                    }\n                    this.setState({ editPlayerInGame });\n                }}> -10 </GrayBubbleButton>\n\n                <GrayBubbleButton className=\"button left-margin\" onClick={()=>{\n                    const editPlayerInGame = {...this.state.editPlayerInGame};\n                    editPlayerInGame.cashOut += 10;\n                    this.setState({ editPlayerInGame });\n                }}> +10 </GrayBubbleButton>\n                <br/>\n                <br/>\n                <InputRange className=\"InputRange\"\n                            step={10}\n                            formatLabel={value => `${value}₪`}\n                            maxValue={maxCashOutRange}\n                            minValue={0}\n                            value={this.state.editPlayerInGame.cashOut}\n                            onChange={cashOut => {\n                                const editPlayerInGame = {...this.state.editPlayerInGame};\n                                editPlayerInGame.cashOut=cashOut;\n                                this.setState({ editPlayerInGame });\n                            }} />\n\n            </div>\n            <div>\n                <br/> <br/>\n                balance: {this.state.editPlayerInGame.cashOut - this.state.editPlayerInGame.buyIn}\n            </div>\n            <div>\n                <GrayBubbleButton className=\"button\" onClick={()=> this.setState({editPlayerInGame:null})}> Cancel</GrayBubbleButton>\n                <GreenBubbleButton className=\"button left-margin\" onClick={this.updateSelectedGamePlayerData}> Save Player</GreenBubbleButton>\n                <GreenBubbleButton className=\"button left-margin\" onClick={()=>{\n                    this.updateSelectedGamePlayerData();\n                    setTimeout(()=>{\n                        this.updateSelectedGame();\n                    },500)\n                }}> Save Game</GreenBubbleButton>\n\n            </div>\n        </div>);\n    }\n\n\n    showImageUploaderForm = ({ gameId })=>{\n        this.setState({ imageUploaderData: { gameId }});\n    }\n\n    hideImageUploaderForm = ()=>{\n        this.setState({ imageUploaderData: null});\n    }\n\n    findPlayerNotInGame = (game)=>{\n        const {group} = this.props;\n        const PLAYERS = {};\n        const GAME_PLAYERS = {};\n        group.players.forEach(player=>{\n            PLAYERS[player.id] = player;\n        });\n\n        game.playersData.forEach(player=>{\n            GAME_PLAYERS[player.playerId] = player;\n        });\n        const playa = group.players.find(player => !GAME_PLAYERS[player.id]);\n\n        return playa ? playa.id : null;\n\n    };\n\n    showImageUploaderForm = ({ gameId })=>{\n        this.setState({ imageUploaderData: { gameId }});\n    }\n\n    handleNewPlayerChange = (existingPlayerId)=> {\n        this.setState({existingPlayerId});\n    };\n\n    addCurrentPlayerToGame = () =>{\n        if (!this.state.existingPlayerId){\n            console.log('no existingPlayerId')\n            return;\n        }\n        const {group} = this.props;\n\n        const editGame = {...this.state.editGame};\n        editGame.playersData.push({\n            buyIn: 50,\n            cashOut: 0,\n            gameId: editGame.id,\n            groupId: group.id,\n            playerId: this.state.existingPlayerId,\n            index: editGame.playersData.length,\n        });\n        console.log('editGame', editGame)\n        const existingPlayerId = this.findPlayerNotInGame(editGame);\n        console.log('new existingPlayerId', existingPlayerId);\n        this.setState({existingPlayerId, editGame});\n    };\n\n    updateSelectedGame = () =>{\n        const { group, provider, token, remoteUpdateGame, updateGroupGame } = this.props;\n        const data = {\n            id: this.state.editGame.id,\n            date: `${this.state.editGame.date}T20:00:00.000Z`,\n            description: this.state.editGame.description,\n            playersData:this.state.editGame.playersData\n        };\n        console.log('calling update game with body:', data);\n        remoteUpdateGame(group.id, data.id, data, provider, token).then((game)=>{\n            // this.setState({ newGame: null, editGame: null, gameSummary:game});\n            updateGroupGame(game);\n            console.log('updated game was ok', game)\n            this.setState({ showSuccess: true, editGame: game});//TODO: date\n            setTimeout(()=>{\n                this.setState({ showSuccess: null});\n                this.props.close();\n            },10)\n        }).catch((e)=>{\n            console.log('update game was NOT ok',e)\n            this.setState({ showError: true});\n            setTimeout(()=>{\n                this.setState({ showError: null});\n                this.props.close();\n            },10)\n        })\n\n    };\n\n    getGamePot = (game)=>{\n        return game.playersData.reduce((all, one)=>{\n            return all + one.buyIn;\n        }, 0);\n    }\n\n    uploadImage = async (image, tags) =>{\n        return postImage(image, tags, this.props.provider, this.props.token)\n    }\n\n\n    handleEditGameDateChange = (event) =>{\n        const editGame = { ...this.state.editGame, date: event.target.value };\n        this.setState({editGame});\n    };\n\n    handleEditGameDescriptionChange = (event) =>{\n        const editGame = { ...this.state.editGame, description: event.target.value };\n        this.setState({editGame});\n    };\n\n    getGameDiff = (game)=>{\n        const totalBuyIn = game.playersData.map(pd=>pd.buyIn).reduce((total, num)=>  total + num, 0);\n        const totalCashOut =game.playersData.map(pd=>pd.cashOut).reduce((total, num)=>  total + num, 0);\n        return totalBuyIn - totalCashOut;\n    };\n\n    removePlayerFromGame = (playerId) =>{\n        const editGame = this.state.editGame;\n        editGame.playersData = editGame.playersData.filter(player => player.playerId !==playerId);\n        const existingPlayerId = this.findPlayerNotInGame(editGame);\n        this.setState({editGame, existingPlayerId})\n    }\n\n    editGamePlayer = (playerId) =>{\n        const game = this.state.editGame;\n        const playerData = game.playersData.find(p=>p.playerId===playerId);\n        const editPlayerInGame = { playerId, buyIn: playerData.buyIn,cashOut: playerData.cashOut };\n        this.setState({editPlayerInGame });\n    }\n\n    render(){\n        const { group } = this.props;\n\n        if (this.state.editPlayerInGame){\n            return this.getEditPlayerInGame()\n        }\n\n        if (this.state.imageUploaderData){\n            return <ImageUploader group={group} {...this.state.imageUploaderData} close={this.hideImageUploaderForm} uploadImage={this.uploadImage} updateImage={this.props.updateImage}/>\n        }\n\n        const isMobile = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n        const PLAYERS = {};\n        const GAME_PLAYERS = {};\n        group.players.forEach(player=>{\n            PLAYERS[player.id] = player;\n        });\n        const game = this.state.editGame;\n        if (!game){\n            console.log('render, no editGame on state')\n            return <div/>;\n        }\n\n        game.playersData.forEach(player=>{\n            GAME_PLAYERS[player.playerId] = player;\n        });\n        const players = game.playersData.map(playerData=>{\n            const playerName = PLAYERS[playerData.playerId].name;\n            const playerImageUrl = PLAYERS[playerData.playerId].imageUrl;\n            const onImageError = (ev)=>{\n                if (!ev.target.secondTry){\n                    ev.target.secondTry = true;\n                    ev.target.src= playerImageUrl;\n                }else{\n                    ev.target.src=ANON_URL;\n                }\n            };\n\n            const image =  <img alt={playerName} className=\"playersListImage\" src={playerImageUrl || ANON_URL} onError={onImageError} /> ;\n\n            return (<div key={`_playerData_${playerData.playerId}`} className=\"editGamePlayerSection\">\n                <GreenBubbleButton className=\"button edit-player-in-game-form\" onClick={()=>this.editGamePlayer(playerData.playerId)}> edit </GreenBubbleButton>\n                {image}\n                { isMobile && <br/>}\n                {playerName}\n                <span className=\"gray-seprator\"> |</span>\n                { isMobile && <br/>}\n                buy-in: {playerData.buyIn} <span className=\"gray-seprator\"> |</span>\n                { isMobile && <br/>}\n                cash-out: {playerData.cashOut} <span className=\"gray-seprator\"> |</span>\n                { isMobile && <br/>}\n                balance: {playerData.cashOut - playerData.buyIn}\n\n                <GrayBubbleButton className=\"button remove-player-from-game\" onClick={()=>this.removePlayerFromGame(playerData.playerId)}> remove </GrayBubbleButton>\n\n            </div>);\n        });\n\n\n        const comboVals = group.players.filter(player => !GAME_PLAYERS[player.id]).map(player =>\n            (\n                <option key={`_comboVals_${player.id}`} value={player.id}>\n                    { player.name }\n                </option>\n            )\n        );\n        const { ready } = game;\n        const diff = this.getGameDiff(game);\n        const { showError, showSuccess} = this.state;\n        return (<div className=\"game-edit-div\">\n            <h2> edit game. </h2>\n            <div className=\"new-game-section\">\n                Game date:\n                <input  className=\"left-margin\" type=\"date\" id=\"newGameDate\" min=\"2010-01-01\" max=\"2050-01-01\" value={this.state.editGame.date} onChange={this.handleEditGameDateChange}/>\n            </div>\n            <div className=\"new-game-section\">\n                description:\n                <input  type=\"text\" id=\"newGameExtra\" className=\"bordered-input left-margin left-pad\" value={this.state.editGame.description} onChange={this.handleEditGameDescriptionChange}/>\n            </div>\n            <div>\n                <div>\n                    <u>{players.length} Players:</u>\n                </div>\n                <div>\n                    {players}\n                </div>\n            </div>\n\n            <hr/>\n            {\n                comboVals.length >0 ? (\n                    <div>\n                        <select name=\"player\" value={this.state.existingPlayerId} onChange={(e)=>this.handleNewPlayerChange(e.target.value)}>\n                            {comboVals}\n                        </select>\n                        <GreenBubbleButton className=\"button left-margin\" onClick={this.addCurrentPlayerToGame}> Add player</GreenBubbleButton>\n                    </div>\n                ) :<div>no more players</div> }\n            <hr/>\n            <div>\n                <GrayBubbleButton className=\"button left-margin\" onClick={this.props.close}> Cancel</GrayBubbleButton>\n                <GreenBubbleButton className=\"button left-margin\" onClick={this.updateSelectedGame}> Save</GreenBubbleButton>\n            </div>\n            <div>\n                <br/>\n                <h3>{ready ? '' : `game still not done (${diff>0 ? diff : -1*diff} ${diff>0 ? 'still in pot':'missing from pot'}).`}</h3>\n            </div>\n            <GreenBubbleButton onClick={()=>this.showImageUploaderForm({ gameId: game.id})} >upload image for this game</GreenBubbleButton>\n            { showError && <ShowErrorAlert message={\"failed to update game\"}/>}\n            { showSuccess && <ShowSuccessAlert message={\"game updated successfully\"}/>}\n        </div>);\n\n    }\n}\n\nexport default EditGameForm;\n","import React from 'react'\nimport { useAlert } from 'react-alert'\n\nconst ShowAlert = (props) => {\n    const alert = useAlert();\n    const {message} = props;\n    setTimeout(()=>{\n            alert.show(message);\n    },1);\n    return (\n        <div/>\n    )\n}\n\nexport default ShowAlert;\n","/* eslint-disable no-restricted-globals */\nimport React, { Component } from 'react';\nimport 'react-input-range/lib/css/index.css';\nimport OnGoingGame from \"./OnGoingGame\";\nimport GameSummary from \"./GameSummary\";\nimport NewGameForm from \"./NewGameForm\";\nimport createGame from \"../actions/createGame\";\nimport updateGame from \"../actions/updateGame\";\nimport EditGameForm from \"./EditGameForm\";\nimport ShowAlert from '../containers/ShowAlert';\nimport ShowErrorAlert from '../containers/ShowErrorAlert';\nconst isMobile = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\nclass GamesTab extends Component {\n\n    getImage=()=>{\n\n        this.imageIndex++;\n\n        if (this.imageIndex > this.imagesCount) {\n            this.imageIndex = 1;\n        }\n        return `backgroundImage${this.imageIndex}.jpg`;\n    };\n\n    gameDateToString = (game)=>{\n        const addLeaddingZero = (num)=>{\n            const str = `${num}`;\n            if (str.length === 2){\n                return str;\n            } else{\n                return `0${str}`;\n            }\n        };\n\n        const isoDate = typeof  game.date === 'string' ? game.date.substr(0,10) :  game.date.toISOString();\n        const year = parseInt(isoDate.substr(0, 4), 10);\n        const month = addLeaddingZero(parseInt(isoDate.substr(5, 2), 10));\n        const day = addLeaddingZero(parseInt(isoDate.substr(8, 2), 10));\n        // const time = game.date.toTimeString();\n\n        return `${day}/${month}/${year}`;\n    }\n\n    constructor(props) {\n        super(props);\n        this.imageIndex = 0;\n        this.imagesCount = 7;\n        this.backgroundImage = `url(${props.group.imageUrl ||  `poker.jpg`})`;\n        this.state = { newGame: null, editGame: null, gameSummary: null, showErrorOnDeleteGame: null, showSuccessDeleteGame: null };\n\n        setTimeout(()=>{\n            props.setClearAll(this.clearAll);\n        },100)\n\n    }\n\n    clearAll = () =>{\n        this.setState({newGame: null, editGame: null, gameSummary: null})\n    }\n\n    showCreateGame = () =>{\n        const str = ((new Date()).toISOString()).substring(0,10)\n        this.setState({ newGame: { date:str, description: 'Hosted by ..'} })\n    };\n\n    closeCreateGameForm = () =>{\n        this.setState({ newGame: null })\n    };\n\n    closeEditGameForm = () =>{\n        this.setState({ editGame: null })\n    };\n\n    handleEditGameDateChange = (event) =>{\n        const editGame = { ...this.state.editGame, date: event.target.value };\n        this.setState({editGame});\n    };\n\n    handleEditGameDescriptionChange = (event) =>{\n        const editGame = { ...this.state.editGame, description: event.target.value };\n        this.setState({editGame});\n    };\n\n    handleNewPlayerChange = (existingPlayerId)=> {\n        this.setState({existingPlayerId});\n    };\n\n    onGameEditClick = (game)=>{\n        const editGame = {...game}\n        editGame.date = typeof game.date === 'string' ? game.date.substr(0,10) : ((game.date).toISOString()).substring(0,10);\n        const existingPlayerId = this.findPlayerNotInGame(editGame);\n\n        this.setState({editGame, existingPlayerId});\n    };\n\n    showGameData = (game) =>{\n        this.setState({ gameSummary: game })\n    };\n\n    updateOnProgressGame = ()=>{\n        if (!this.state.gameSummary){\n            return;\n        }\n        const {group, getGame, provider, token} = this.props;\n        const onGoingGameId = this.state.gameSummary.id;\n        getGame(group.id, onGoingGameId, provider, token).then((gameSummary)=>{\n            gameSummary.date = new Date(gameSummary.date);\n            this.setState({gameSummary});\n        })\n    };\n\n    deleteSelectedGame = ()=>{\n        if (confirm(\"Are you sure?\")){\n            try{\n                const { group, provider, token, remoteDeleteGame, removeGroupGame } = this.props;\n                const gameId = this.state.gameSummary.id;\n                remoteDeleteGame(group.id, gameId, provider, token).then(()=>{\n                    this.setState({ newGame: null, editGame: null, gameSummary:null, showErrorOnDeleteGame: null, showSuccessDeleteGame: true});\n                    setTimeout(()=>{\n                        this.setState({ showErrorOnDeleteGame: null, showSuccessDeleteGame: null});\n                        removeGroupGame(gameId);\n                    },100)\n                }).catch((e)=>{\n                    this.setState({ showErrorOnDeleteGame: true, showSuccessDeleteGame: null});\n                    setTimeout(()=>{\n                        this.setState({ showErrorOnDeleteGame: null, showSuccessDeleteGame: null});\n                    },100)\n                })\n            }catch(error){\n                console.error('deleteSelectedGame error', error);\n            }\n        }\n    };\n\n    findPlayerNotInGame = (game)=>{\n        const {group} = this.props;\n        const PLAYERS = {};\n        const GAME_PLAYERS = {};\n        group.players.forEach(player=>{\n            PLAYERS[player.id] = player;\n        });\n\n        game.playersData.forEach(player=>{\n            GAME_PLAYERS[player.playerId] = player;\n        });\n        const playa = group.players.find(player => !GAME_PLAYERS[player.id]);\n\n        return playa ? playa.id : null;\n\n    };\n\n    getGameDiff = (game)=>{\n        const totalBuyIn = game.playersData.map(pd=>pd.buyIn).reduce((total, num)=>  total + num, 0);\n        const totalCashOut =game.playersData.map(pd=>pd.cashOut).reduce((total, num)=>  total + num, 0);\n        return totalBuyIn - totalCashOut;\n    };\n\n    getGamePot = (game)=>{\n        return game.playersData.reduce((all, one)=>{\n            return all + one.buyIn;\n        }, 0);\n    }\n\n    getGamesSummary = () =>{\n        return <GameSummary\n            game={this.state.gameSummary}\n            group={this.props.group}\n            back={()=>this.setState({editGame:null, gameSummary:null})}\n            edit={()=>this.onGameEditClick(this.state.gameSummary)}\n            delete={this.deleteSelectedGame}\n        />;\n    }\n\n    render(){\n\n        const { group } = this.props;\n        const {games} = group;\n\n        if (this.state.newGame){\n            return <NewGameForm group={group}\n                                close={this.closeCreateGameForm}\n                                newGame={this.state.newGame}\n                                remoteCreateGame={createGame}\n                                updateGroupGame={this.props.updateGroupGame}\n                                user={this.props.user}\n                                provider={this.props.provider}\n                                token={this.props.token} />\n        }\n        if (this.state.editGame){\n            return <EditGameForm editGame={this.state.editGame}\n                                 group={group}\n                                 close={this.closeEditGameForm}\n                                 remoteUpdateGame={updateGame}\n                                 updateGroupGame={this.props.updateGroupGame}\n                                 updateImage={this.props.updateImage}\n                                 user={this.props.user}\n                                 provider={this.props.provider}\n                                 token={this.props.token}\n            />;\n        }\n\n        if (this.state.gameSummary){\n            const game = this.state.gameSummary;\n            const { ready } = game;\n            if (ready) return this.getGamesSummary();\n            return <OnGoingGame deleteSelectedGame={this.deleteSelectedGame}\n                                updateImage={this.props.updateImage}\n                                group={group}\n                                user={this.props.user}\n                                gameId={game.id}\n                                game={game}\n                                onBack={()=>this.setState({gameSummary: null})}\n                                updateOnProgressGame={this.updateOnProgressGame}\n                                onGameEditClick={()=>this.onGameEditClick(game)}/>\n\n\n        }\n\n        const GAMES = games.sort((a,b)=> a.date > b.date ? -1 : 1).map((game,index) => {\n            const { ready } = game;\n            const pot = this.getGamePot(game);\n            const style = {\n                backgroundImage: `url(${game.imageUrl || this.getImage()})`,\n                borderRadiusTop: '50px',\n            };\n\n            let mvpPlayerId, mvpPlayerData, mvpName, mvpBalance, mvpImageUrl;\n            if (ready){\n                mvpPlayerId = game.mvpPlayerId;\n\n                mvpPlayerData = group.players.find(p=>p.id === mvpPlayerId);\n\n                const mvp = game.playersData.find(item => item.playerId===mvpPlayerId);\n                const mvpBottomLine = mvp.cashOut - mvp.buyIn;\n\n                mvpName = mvpPlayerData ?\n                    mvpPlayerData.name ? mvpPlayerData.name : ( mvpPlayerData.firstName ? `${mvpPlayerData.firstName} ${mvpPlayerData.familyName}` : null)\n                    : null;\n                mvpBalance = `+${mvpBottomLine}`;\n                mvpImageUrl = mvpPlayerData ? mvpPlayerData.imageUrl : null;\n                if (mvpImageUrl && !game.imageUrl){\n                    style.backgroundImage = `url(${mvpImageUrl}), url(${this.getImage()})`\n                    style.backgroundSize = isMobile ? '60px 100px, cover': '160px 280px, cover'\n                    style.backgroundRepeat = 'no-repeat, repeat'\n                    style.backgroundPosition = 'right top'\n                    style.backgroundBlendMode = 'luminosity, normal'\n                }\n            }\n\n\n\n            return (\n                <div key={game.id}\n                     className={`game-item-div ${ready?'':'game-item-div-not-ready'}`}\n                     onClick={()=>this.showGameData(game)}\n\n                >\n                    <div key={game.id} className=\"game-item-div-inner\" style={style}>\n                        <div><b>{this.gameDateToString(game) }</b></div>\n                        <div className=\"group-description\">{game.description } </div>\n                        <div className=\"my-group\">{pot} in pot</div>\n\n                    </div>\n\n                    <div className=\"game-extra-data\">\n\n                        <div > {game.playersData.length } players </div>\n                        <div className='game-not-ready-text' >{ready ? '' : 'GAME NOT READY'} </div>\n                        <div className='game-mvp-text' >\n                            {ready && mvpPlayerData && mvpName ?\n                                <span>\n                                    <b>MVP</b>\n                                    {isMobile ? <div></div> : <span></span>}\n                                    <img src={mvpImageUrl} className=\"game-mvp\"/>\n\n                                    {mvpName} {mvpBalance}\n                                </span>\n\n                                : <span></span>}\n\n                        </div>\n                    </div>\n                </div>\n            );\n\n        });\n        const { showErrorOnDeleteGame, showSuccessDeleteGame } = this.state;\n        return (<div id=\"all-games-div\" >\n            <div className=\"row\">\n                <div className=\"col-xs-6\">\n                    <div className=\"game-item-div\" onClick={this.showCreateGame}>\n\n                        <img src=\"plus.png\" className=\"game-item-div-plus-sign\"/>\n                    </div>\n                </div>\n\n                {GAMES}\n                { showErrorOnDeleteGame && <ShowErrorAlert message={\"failed to remove game\"}/>}\n\n                { showSuccessDeleteGame && <ShowAlert message={\"game was removed\"}/>}\n\n            </div>\n        </div>)\n\n    }\n}\n\nexport default GamesTab;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function createPlayer(groupId, playerData, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'POST',\n      url: `${URL_PREFIX}/groups/${groupId}/players`,\n      body: JSON.stringify(playerData),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to create new player');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to create new player');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default createPlayer;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function updatePlayer(groupId, playerId, data, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'PATCH',\n      url: `${URL_PREFIX}/groups/${groupId}/players/${playerId}`,\n      body: JSON.stringify(data),\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to update player');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to update player');\n        return reject(bodyObj.title);\n      }\n      return resolve(JSON.parse(body));\n    });\n  });\n}\n\nexport default updatePlayer;\n","\nimport request from 'request';\nimport URL_PREFIX from '../url';\n\nasync function deletePlayer(groupId, playerId, provider, token) {\n  return new Promise((resolve, reject) => {\n    const options = {\n      method: 'DELETE',\n      url: `${URL_PREFIX}/groups/${groupId}/players/${playerId}`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to delete player');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('failed to delete player', bodyObj);\n        return reject(bodyObj.title);\n      }\n      return resolve();\n    });\n  });\n}\n\nexport default deletePlayer;\n","\nimport React, { Component } from 'react';\nimport InputRange from 'react-input-range';\nimport ImageSlider from '../components/ImageSlider';\n\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, ReferenceLine } from 'recharts';\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\nimport RedBubbleButton from '../containers/RedBubbleButton';\n\n\nimport CONSTS from '../CONSTS';\nconst SmartPhone = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\nconst body = document.getElementsByTagName('body')[0];\nconst windowWidth = window.innerWidth || document.documentElement.clientWidth || body.clientWidth;\nconst Width = windowWidth;\nconst { ANON_URL } = CONSTS;\n\nclass PlayerSummary extends Component {\n\n    constructor(props){\n        super(props);\n\n        const player = this.props.player;\n        const group = this.props.group;\n        const playerId = player.id;\n\n        this.playerGames = group.games.map(game => {\n            const playerData = game.playersData.find(p => p.playerId === playerId);\n            return playerData ? {game, playerData} : false;\n        }).filter(x => !!x).sort((a,b)=>a.game.date < b.game.date ? -1 : 1);\n\n        this.yearsObject = {};\n        this.playerGames.forEach((game,index)=>{\n            const year = game.game.date.getYear() + 1900;\n            if (!this.yearsObject[year]){\n                this.yearsObject[year] = {\n                    from: index,\n                    to: index\n                }\n            } else{\n                this.yearsObject[year].to = index;\n            }\n        });\n\n\n        this.firstGame = this.playerGames.length >0 ? this.playerGames[0] : null;\n\n        this.state = { sliderValues: { min: 0, max: this.playerGames.length - 1 } }\n    }\n    render() {\n        const player = this.props.player;\n        const group = this.props.group;\n        const { isAdmin} = group;\n        const playerGames =  this.playerGames;\n\n        const firstGame = this.firstGame;\n\n        const playerGamesDivs = playerGames.map(({game, playerData}, index) => {\n            if (this.state.sliderValues.min <= index && index <= this.state.sliderValues.max){\n                return <div key={game.date} className=\"player-game-data\">\n                    {(typeof game.date === 'string' ? new Date(game.date) : game.date).AsGameName()} <span\n                    className=\"gray-seprator\"> |</span>\n                    {SmartPhone && game.description}\n                    {SmartPhone && <span className=\"gray-seprator\"> |</span>}\n                    {SmartPhone && <br/>}\n                    buy-in: {playerData.buyIn} <span className=\"gray-seprator\"> |</span>\n                    cash-out: {playerData.cashOut} <span className=\"gray-seprator\"> |</span>\n                    balance: {playerData.cashOut - playerData.buyIn}\n                    {!SmartPhone && <span className=\"gray-seprator\"> |</span>}\n                    {!SmartPhone && game.description}\n                </div>\n            }\n            return <div key={game.date}/>\n\n        });\n        let graph = <div/>;\n        const playerName = player.name;\n        let playerBalance = 0;\n        let rangeBalance = 0;\n\n        if (playerGames.length > 0) {\n            const data = [{name:\" B.C. \",[playerName]:0}];\n\n            playerGames.forEach((gameObject,index) =>{\n                const gameDate = gameObject.game.date.AsGameName();\n                const game = {name:gameDate};\n                const playerData = gameObject.playerData;\n                playerBalance += (playerData.cashOut - playerData.buyIn);\n                if (this.state.sliderValues.min <= index && index <= this.state.sliderValues.max){\n                    rangeBalance += (playerData.cashOut - playerData.buyIn);\n                    game[playerName] = rangeBalance;\n                    data.push(game);\n                }\n\n            });\n            graph = (\n                <div className=\"col-xs-11 \">\n                    <LineChart className=\"gameGraphLineChart\" width={SmartPhone ? Width : Width*(97/100)} height={SmartPhone ? 260 : 500} data={data}  >\n                        <XAxis dataKey=\"name\"/>\n                        <YAxis/>\n                        <CartesianGrid strokeDasharray=\"0 40\"/>\n                        <ReferenceLine y={0} label=\"Zero\" stroke=\"red\"/>\n\n                        <Line className=\"graphLine\" type=\"monotone\" key={playerName} dataKey={playerName}  stroke=\"black\"  />\n                    </LineChart>\n                </div>\n            );\n\n        }\n        const yearsButtons = Object.keys(this.yearsObject).sort().map(year=>{\n            return <GrayBubbleButton key={`year-${year}`} className=\"year-button\" onClick={()=> this.setState({ sliderValues: { min: this.yearsObject[year].from, max: this.yearsObject[year].to } })}>{year}</GrayBubbleButton>\n        });\nconsole.log('player',player)\n        return (\n            <div className=\"playerSummary\">\n                <div className=\"playerSummaryHeader\">\n                    <div>\n                        name: {player.name}\n                    </div>\n                    <div>\n                        email: {player.email}\n                    </div>\n                    { firstGame ? (\n                        <div>\n                            <div>\n                                playing since {firstGame.game.date.AsGameName()}\n                            </div>\n                            <div>\n                                balance: {playerBalance} ({playerGames.length} games)\n                            </div>\n                        </div>\n                    ) : <div>no games yet</div>}\n\n                    <img alt=\"\" className=\"playerPageImage\" src={player.imageUrl || ANON_URL}/>\n\n                    <ImageSlider  group={this.props.group} playerId={this.props.player.id}  />\n\n                </div>\n                <hr/>\n                {/*`${this.playerGames[value.min].game.date.AsGameName()} - ${this.playerGames[value.max].game.date.AsGameName()} `*/}\n                { firstGame && (\n                    <div>\n                        <div><b>Date range specific data:</b><br/></div>\n                        <div>From {this.playerGames[this.state.sliderValues.min].game.date.AsGameName()} to {this.playerGames[this.state.sliderValues.max].game.date.AsGameName()}</div>\n                        <div>\n                            <InputRange className=\"InputRange\"\n                                        step={1}\n                                        formatLabel={() => ``}\n                                        maxValue={this.playerGames.length - 1}\n                                        minValue={0}\n                                        value={this.state.sliderValues}\n                                        onChange={sliderValues => {\n                                            if (this.state.sliderValues.min < this.state.sliderValues.max){\n                                                this.setState({ sliderValues });\n                                            }\n                                        }} />\n                        </div>\n                        <div>\n                            balance: {rangeBalance} ({this.state.sliderValues.max - this.state.sliderValues.min + 1} games)\n                        </div>\n                        <div>\n                            {graph}\n                        </div>\n                        <div>\n                            {yearsButtons}\n                        </div>\n                    </div>\n                )}\n\n                <div className=\"buttons-section\">\n                    <GrayBubbleButton onClick={this.props.back}>Back</GrayBubbleButton>\n                    {isAdmin &&\n                    <GrayBubbleButton onClick={this.props.edit} className=\"left-margin\">Edit</GrayBubbleButton>}\n                    {isAdmin && playerGames.length === 0 &&\n                    <RedBubbleButton onClick={this.props.delete} className=\"left-margin\">Delete</RedBubbleButton>}\n                </div>\n                <div className=\"playerGames\">\n\n                    {playerGamesDivs}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default PlayerSummary;\n\n","/* eslint-disable no-restricted-globals */\nimport React, { Component } from 'react';\nimport createPlayer from \"../actions/createPlayer\";\nimport updatePlayer from \"../actions/updatePlayer\";\nimport deletePlayer from \"../actions/deletePlayer\";\nimport PlayerSummary from \"./PlayerSummary\";\n\nimport CONSTS from '../CONSTS';\n\n\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\n\nconst baseUrl = window.location.origin === 'http://localhost:3000' ? 'http://www.poker-stats.com' : window.location.origin;\nconst { ANON_URL } = CONSTS;\nconst FULL_ANON_URL = `${baseUrl}/${ANON_URL}`;\n\nclass PlayersTab extends Component {\n\n    constructor(props) {\n        super(props);\n        const {players} = props.group;\n\n        this.PLAYERS = (players || []).sort((a,b)=> a.gamesCount > b.gamesCount ? -1 : 1).map((player,index) => {\n            const style = {\n                backgroundImage: `url(${player.imageUrl || FULL_ANON_URL})`,\n                borderRadiusTop: '50px',\n            };\n\n            return (\n                <div key={`${index}_${player.id}`} className={`player-item-div`}  onClick={()=>this.showPlayerData(player)}>\n                    <div className=\"player-item-div-inner\" style={style}>\n                        <div><b>{player.name}</b></div>\n                        {  player.gamesCount ?\n                            (<div>\n                                <div>  {player.gamesCount} games</div>\n                                <div>  {player.balance}₪ </div>\n                            </div>) :\n                            <div>no games yet</div> }\n                    </div>\n                </div>\n            );\n\n        });\n\n\n        this.state = { newPlayer: null, editPlayer: null, playerSummary: null };\n    }\n\n    showPlayerData = (player) =>{\n        this.setState({ playerSummary: player })\n    }\n\n    showCreatePlayer = () =>{\n        this.setState({ newPlayer: {  name: '', email: ''} });\n    }\n\n    onPlayerEditClick = (editPlayer) =>{\n        this.setState({ editPlayer });\n    }\n\n    onPlayerDeleteClick = async(playerId) =>{\n        if (confirm(\"Are you sure?\")){\n            try{\n                await deletePlayer(this.props.group.id, playerId, this.props.provider, this.props.token);\n                this.props.updatePlayerRemoved(playerId);\n                this.setState({playerSummary:null})\n            }catch(error){\n                console.error('deletePlayerById error',error);\n            }\n        }\n    }\n\n    createNewPlayer = () => {\n        const { group, provider, token, updatePlayerData } = this.props;\n        const player = {\n            name: this.state.newPlayer.name,\n            email: this.state.newPlayer.email,\n        }\n        console.log('calling create player with body:', player);\n        createPlayer(group.id, player, provider, token).then((player)=>{\n            this.setState({ newPlayer: null, editPlayer: null,playerSummary:null});\n            updatePlayerData(player);\n        });\n    }\n\n    getNewPlayerSection = () => {\n        const legal = this.state.newPlayer.name && this.state.newPlayer.name.length > 0;\n\n        return (<div id=\"new-player-form\">\n            <h2> Create a new player. </h2>\n\n            <div className=\"new-player-section\">\n                name:\n                <input  type=\"text\" id=\"newGameExtra\" className=\"bordered-input left-margin left-pad\" value={this.state.newPlayer.name} onChange={(event)=>{\n                    const newPlayer = {...this.state.newPlayer};\n                    newPlayer.name = event.target.value;\n                    this.setState({newPlayer})\n                }}/>\n            </div>\n            <div className=\"new-player-section\">\n                email:\n                <input  type=\"text\" id=\"newGameExtra\" className=\"bordered-input left-margin left-pad\" value={this.state.newPlayer.email}onChange={(event)=>{\n                    const newPlayer = {...this.state.newPlayer};\n                    newPlayer.email = event.target.value;\n                    this.setState({newPlayer})\n                }}/>\n            </div>\n            <div className=\"new-player-section\">\n\n                <GrayBubbleButton className=\"button left-margin\"  onClick={()=>this.setState({newPlayer: null})}> Cancel </GrayBubbleButton>\n                <GreenBubbleButton className=\"button left-margin\"  onClick={this.createNewPlayer} disabled={!legal}> Create </GreenBubbleButton>\n            </div>\n\n\n        </div>);\n    };\n\n    saveEditedPlayer = () =>{\n        const { group, provider, token, updatePlayerData } = this.props;\n        const player = {\n            id: this.state.editPlayer.id,\n            name: this.state.editPlayer.name,\n            email: this.state.editPlayer.email,\n            imageUrl: this.state.editPlayer.imageUrl,\n        }\n        console.log('saveEditedPlayer player', player)\n        updatePlayer(group.id, player.id, player, provider, token).then((p)=>{\n            this.setState({ newPlayer: null, editPlayer: null,playerSummary:null});\n            updatePlayerData(p);\n        });\n    }\n\n    getPlayerEdit = () =>{\n        return (\n            <div className=\"playerEditForm\">\n                <div className=\"playerSummaryHeader\">\n                    <div>\n                        name: {this.state.editPlayer.name}\n                        <input  type=\"text\" id=\"playerName\" className=\"bordered-input left-margin left-pad\" value={this.state.editPlayer.name} onChange={(event)=>{\n                            const editPlayer = {...this.state.editPlayer};\n                            editPlayer.name = event.target.value || '';\n                            this.setState({editPlayer});\n                        }}/>\n\n                    </div>\n                    <div>\n                        email:\n                        <input  type=\"text\" id=\"playerEmail\" className=\"bordered-input left-margin left-pad\" value={this.state.editPlayer.email} onChange={(event)=>{\n                            const editPlayer = {...this.state.editPlayer};\n                            editPlayer.email = event.target.value || '';\n                            this.setState({editPlayer});\n                        }}/>\n                    </div>\n                    <div>\n                        image:\n                        <input  type=\"text\" id=\"playerImage\" className=\"bordered-input left-margin left-pad\" value={this.state.editPlayer.imageUrl||''} onChange={(event)=>{\n                            const editPlayer = {...this.state.editPlayer};\n                            editPlayer.imageUrl = event.target.value || '';\n                            this.setState({editPlayer});\n                        }}/>\n                    </div>\n\n                    {this.state.editPlayer.imageUrl && this.state.editPlayer.imageUrl.length >0 && <img alt=\"\" className=\"playerPageImage\" src={this.state.editPlayer.imageUrl}/>}\n                </div>\n\n                <div className=\"buttons-section\">\n                    <GrayBubbleButton onClick={()=>this.setState({editPlayer:null})}>Back</GrayBubbleButton>\n                    <GreenBubbleButton onClick={this.saveEditedPlayer} className=\"left-margin\">Save</GreenBubbleButton>\n\n                </div>\n\n\n            </div>\n        );\n\n    }\n\n\n    render() {\n        if (this.state.newPlayer){\n            return this.getNewPlayerSection()\n        }\n        if (this.state.editPlayer){\n            return this.getPlayerEdit();\n        }\n\n        if (this.state.playerSummary){\n            return <PlayerSummary\n                player={this.state.playerSummary}\n                group={this.props.group}\n                back={()=>this.setState({playerSummary: null})}\n                edit={()=>this.onPlayerEditClick(this.state.playerSummary)}\n                delete={()=>this.onPlayerDeleteClick(this.state.playerSummary.id)}\n            />\n        }\n\n        return (<div id=\"all-games-div\" >\n            <div className=\"row\">\n                <div className=\"col-xs-6\">\n                    <div className=\"player-item-div\"\n                         onClick={this.showCreatePlayer}>\n                        <img src=\"plus.png\" className=\"player-item-div-plus-sign\"/>\n\n                    </div>\n                </div>\n\n                {this.PLAYERS}\n\n            </div>\n        </div>)\n\n\n    }\n}\n\nexport default PlayersTab;\n\n","\nimport React, { Component } from 'react';\nimport 'react-input-range/lib/css/index.css';\nimport getGame from '../actions/getGame';\nimport createGame from '../actions/createGame';\nimport updateGame from '../actions/updateGame';\nimport deleteGame from '../actions/deleteGame';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport GameData from './GameData';\nimport GameSummary from './GameSummary';\nimport ImagesTab from './ImagesTab';\nimport ImageUploader from './ImageUploader';\nimport GamesTab from './GamesTab';\nimport PlayersTab from \"./PlayersTab\";\nimport GrayBubbleButton from '../containers/GrayBubbleButton';\nimport GreenBubbleButton from '../containers/GreenBubbleButton';\nimport { version } from '../../package.json';\nclass GroupPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.imageIndex = 0;\n        this.imagesCount = 7;\n        this.backgroundImage = `url(${props.group.imageUrl ||  `poker.jpg`})`;\n        this.clearGamesTabSelections = ()=>{};\n\n\n        this.state = { tabKey: 'summary', existingPlayerId: null  }\n    }\n\n    logout = ()=>{\n        this.setState({showMenu: false });\n        this.props.logout();\n    };\n\n    goHome = ()=>{\n        this.setState({showMenu: false });\n        this.props.goHome();\n    };\n\n    onKeyChange = (tabKey)=>{\n        this.clearGamesTabSelections();\n        this.setState({tabKey });\n    };\n\n    handleNewPlayerChange = (existingPlayerId)=> {\n        this.setState({existingPlayerId});\n    };\n\n    showImageUploaderForm = ({ gameId })=>{\n        this.setState({ imageUploaderData: { gameId }});\n    }\n\n    hideImageUploaderForm = ()=>{\n        this.setState({ imageUploaderData: null});\n    }\n\n    /***/\n\n    getHeader = ()=>{\n\n        const { group } = this.props;\n        const {isAdmin} = group;\n\n        const menuItems = [];\n\n\n        if (isAdmin){\n            menuItems.push(<MenuItem key=\"menuItem1\" onClick={()=>this.props.editGroup(group)}>Edit Group</MenuItem>);\n        }\n\n        menuItems.push(<MenuItem key=\"menuItem5\" onClick={this.goHome}>Home</MenuItem>);\n        menuItems.push(<MenuItem key=\"menuItem6\" onClick={this.logout}>Logout</MenuItem>);\n        menuItems.push(<MenuItem key=\"menuItem6\" onClick={()=>{}}><div><hr/> <span className=\"version-menu-item-text\">version: </span><span className=\"version-menu-item-number\">{version}</span></div></MenuItem>);\n\n        return  <div id=\"app-header\" >\n            <MenuIcon id=\"menuIcon\" fontSize=\"inherit\" className='menu-icon' onClick={()=>this.setState({showMenu: !this.state.showMenu})} />\n\n            {this.state.showMenu &&\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={ ()=>document.getElementById(\"menuIcon\") }\n                keepMounted\n                open={true}\n                onClose={()=>this.setState({showMenu: !this.state.showMenu})} >\n\n                {menuItems}\n\n            </Menu>}\n\n\n\n            <span id=\"app-header-text\"><img src=\"pokerStatsLogoWithSheep.png\" className=\"sheep-logo\"/>Group Page</span>\n        </div>\n    };\n\n    getNewGameSection = () => {\n        const legal = this.state.newGame.date && this.state.newGame.date.length === 10;\n\n        return (<div id=\"new-game-form\">\n                    <h2> Create a new game. </h2>\n                    <div className=\"new-game-section\">\n                        Game date:\n                        <input  className=\"left-margin\" type=\"date\" id=\"newGameDate\" min=\"2010-01-01\" max=\"2050-01-01\" value={this.state.newGame.date} onChange={this.handleNewGameDateChange}/>\n                    </div>\n                    <div className=\"new-game-section\">\n                       description:\n                        <input  type=\"text\" id=\"newGameExtra\" className=\"bordered-input left-margin left-pad\" value={this.state.newGame.description} onChange={this.handleNewGameDescriptionChange}/>\n                    </div>\n                    <div className=\"new-game-section\">\n\n                      <GrayBubbleButton className=\"button left-margin\"  onClick={()=>this.setState({newGame: null})}> Cancel </GrayBubbleButton>\n                        <GreenBubbleButton className=\"button left-margin\"  onClick={this.createNewGame} disabled={!legal}> Create </GreenBubbleButton>\n                    </div>\n\n\n                 </div>);\n    };\n\n\n    getGamesSummary = () =>{\n        return <GameSummary\n            game={this.state.gameSummary}\n            group={this.props.group}\n            back={()=>this.setState({editGame:null, gameSummary:null})}\n            edit={()=>this.onGameEditClick(this.state.gameSummary)}\n            delete={this.deleteSelectedGame}\n        />;\n    }\n\n    render() {\n\n        const { group } = this.props;\n\n        if (this.state.imageUploaderData){\n            return <ImageUploader group={group} {...this.state.imageUploaderData} close={this.hideImageUploaderForm} uploadImage={this.uploadImage}/>\n        }\n\n        const isMobile = ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\n\n        const max = isMobile ? 7 : 8;\n\n        const header = this.getHeader();\n\n        const style = {\n            backgroundImage: this.backgroundImage,\n        };\n\n        return (\n            <div id=\"container\" className=\"group-page\">\n                {header}\n\n                <div id=\"group-image-title\" className=\"group-image-title\" style={style} >\n                    <div className=\"row\">\n                        <div className=\"col-xs-8 event-page-title\" >\n                            <div>{group.name}</div>\n                            <div  className=\"event-page-description\">{group.description}</div>\n\n                        </div>\n                    </div>\n                </div>\n\n\n                <div id=\"group-page-data\"  >\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" style={{fontSize: isMobile ? \"0.8em\" : \"1em\"}} activeKey={this.state.tabKey} onSelect={this.onKeyChange} variant=\"pills\">\n                        <Tab eventKey=\"summary\" title=\"summary\" >\n                            <GameData group={group}\n                                      playersCount={max}\n                                      IsGroupSummary={true}/>\n                        </Tab>\n                        <Tab eventKey=\"games\" title=\"Games\" >\n                            <div id=\"games-tab\">\n                                <GamesTab group={group}\n                                          remoteCreateGame={createGame}\n                                          remoteUpdateGame={updateGame}\n                                          remoteDeleteGame={deleteGame}\n                                          getGame={getGame}\n                                          removeGroupGame={this.props.removeGame}\n                                          updateGroupGame={this.props.updateGame}\n                                          removeGame={this.props.removeGame}\n                                          updateImage={this.props.updateImage}\n                                          setClearAll={ (func)=> { this.clearGamesTabSelections = func }}\n                                          user={this.props.user}\n                                          provider={this.props.provider}\n                                          token={this.props.token}/>\n                            </div>\n\n                        </Tab>\n                        <Tab eventKey=\"players\" title=\"Players\" >\n                            <div id=\"players-tab\">\n                                <PlayersTab\n                                group={group}\n                                updatePlayerData={this.props.updatePlayerData}\n                                updatePlayerRemoved={this.props.updatePlayerRemoved}\n                                user={this.props.user}\n                                provider={this.props.provider}\n                                token={this.props.token}/>\n\n                            </div>\n                        </Tab>\n\n                        <Tab eventKey=\"images\" title=\"Images\"  >\n                            <div id=\"images-tab\">\n                                <ImagesTab group={group}\n                                           provider={this.props.provider}\n                                           token={this.props.token}\n                                           user={this.props.user}\n                                           removeImage={this.props.removeImage}\n                                           uploadImage={this.props.uploadImage}\n                                           updateImage={this.props.updateImage}/>\n                            </div>\n                        </Tab>\n\n                    </Tabs>\n                </div>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default GroupPage;\n\n","import request from 'request';\nimport URL_PREFIX from '../url';\n\n\nasync function login(provider, token) {\n  return new Promise((resolve, reject) => {\n   // console.log('login URL_PREFIX', URL_PREFIX);\n\n    const options = {\n      url: `${URL_PREFIX}/groups/`,\n      headers: {\n        provider,\n        'x-auth-token': token,\n        'Content-Type': 'application/json',\n      },\n    };\n    request(options, (error, response, body) => {\n      if (error || response.statusCode >= 400) {\n        if (error) {\n          console.error('request cb error', error);\n          return reject('failed to connect, server might be down');\n        }\n        const bodyObj = JSON.parse(body);\n        console.error('request cb error body', bodyObj);\n        return reject(bodyObj.title);\n      }\n\n      if (response && response.headers && response.headers['x-user-context']) {\n        const userContextString = response.headers['x-user-context'];\n        const userContext = JSON.parse(decodeURI(userContextString));\n        const groups = JSON.parse(body).results;\n\n        return resolve({\n          groups, userContext, provider, token,\n        });\n      }\n      console.error('request cb no header');\n\n      return reject('server response is missing the user context');\n    });\n  });\n}\n\nexport default login;\n","\nimport React, { Component } from 'react';\n\nimport FacebookLogin from  'react-facebook-login/dist/facebook-login-render-props';\nimport { GoogleLogin } from 'react-google-login';\n\nimport login from '../actions/login';\n\nimport Loader from \"../containers/Loading\";\nimport { version } from '../../package.json';\n\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst GOOGLE_CLIENT_ID= '819855379342-js3mkfftkk25qopes38dcbhr4oorup45.apps.googleusercontent.com';\nconst FACEBOOK_APP_ID= '2487592561563671';\nconst protocol = window.location.protocol;\nconst isHttps = protocol==='https:';\nconst showFB =  isHttps;\nconst tryConnectToFB =  isHttps && !!window.location.search && window.location.search.includes('fb=true') ;\nconst httpsUrl = 'https://www.poker-stats.com?fb=true';\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = { error: null };\n        if (tryConnectToFB) {\n            setTimeout(()=>{\n                try {\n                    const fbButton = document.getElementById(\"fbButton\");\n                    if (fbButton) {\n                        fbButton.click(); // Click on the checkbox\n                    }\n                } catch (e) {\n                    console.log('e',e)\n                }\n\n            },1000)\n        }\n    }\n\n    onFailure = (error) => {\n        console.error('App onFailure', error);\n        this.setState({ error });\n    };\n\n    performLogin = async (provider, token, showError = true) => {\n        try{\n            const result = await login(provider, token);\n            const authData = localStorage.getItem('authData');\n            const issueDate  = authData ? JSON.parse(authData).issueDate : new Date();\n            localStorage.setItem('authData', JSON.stringify({provider, token, issueDate }));\n            return this.props.onLogin(result);\n\n\n        } catch(error) {\n            localStorage.removeItem('authData');\n            if (showError){\n                return this.onFailure(error);\n            } else{\n                return this.onFailure(null);\n            }\n        }\n    };\n\n    facebookResponse = (response) => {\n        if (response.accessToken){\n            this.performLogin('facebook', response.accessToken, true);\n        }else{\n            this.onFailure('login failed')\n        }\n\n    };\n\n    googleResponse = (response) => {\n        if (response.accessToken){\n            this.performLogin('google', response.accessToken, true);\n        }else{\n            this.onFailure('login failed')\n        }\n\n    };\n\n    render() {\n        const authData = localStorage.getItem('authData');\n        if (authData){\n            const {provider, token, issueDate } = JSON.parse(authData);\n            const timePassed = (new Date()).getTime() - (new Date(issueDate)).getTime();\n            if (timePassed > ONE_DAY){\n                localStorage.removeItem('authData');\n            } else{\n                this.performLogin(provider, token, false);\n                return <Loader />;\n            }\n        }\n        const google = (<GoogleLogin\n\n            clientId={GOOGLE_CLIENT_ID}\n            onSuccess={this.googleResponse}\n            onFailure={this.onFailure}\n            render={renderProps => (\n                <div className=\"login-button login-button-google\" onClick={renderProps.onClick}> LOGIN WITH GOOGLE</div>\n            )}\n        />);\n\n         const facebook = showFB ? (<FacebookLogin\n            disableMobileRedirect={true}\n            appId={FACEBOOK_APP_ID}\n            autoLoad={false}\n            fields=\"name,email,picture\"\n            callback={this.facebookResponse}\n            render={renderProps => (\n                <div id=\"fbButton\" className=\"login-button login-button-fb\" onClick={renderProps.onClick}> LOGIN WITH FACEBOOK</div>\n            )}\n         />) :  <div className=\"login-button login-button-fb\" onClick={()=>{ window.location = httpsUrl}}> LOGIN WITH FACEBOOK</div>;\n\n        return (\n            <div id=\"login-page\">\n                <div id=\"version\">\n                    version: {version}\n                </div>\n                <div>\n                    <img id=\"sheep-img\" src=\"sheep.png\" alt='sheep'/>\n                </div>\n\n                <div>\n                    <img id=\"pokerStatsLogo\" src=\"pokerStatsLogo.png\" alt='Chips'/>\n                </div>\n\n                <div>\n                    <img id=\"chips-img\" src=\"https://res.cloudinary.com/www-poker-stats-com/image/upload/v1618731943/Casino-Poker-Chips-croped.png\" alt='Chips'/>\n\n                </div>\n\n                {facebook}\n                {google}\n                <div id=\"loginErrorSection\">\n                    {this.state.error ? this.state.error : ''}\n                </div>\n\n\n            </div>\n        );\n\n    }\n}\n\nexport default Login;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nimport './style/app.css';\n\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.BOTTOM_CENTER,\n    timeout: 3000,\n    offset: '30px',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n}\n\nconst Root = () => (\n    <AlertProvider template={AlertTemplate} {...options}>\n        <App />\n    </AlertProvider>\n)\n\n\nReactDOM.render(\n    <Root/>,\n  document.getElementById('root')\n);\n","import React from 'react'\n\nconst RedBubbleButton = (props) => {\n\n    return (\n        <button {...props} className={`${props.className} confetti-button confetti-button-red`} onClick={(e)=>{\n            e.preventDefault();\n            //reset animation\n            try {\n                e.target.classList.remove('animate');\n            } catch (e) {\n            }\n\n            try {\n                e.target.classList.add('animate');\n            } catch (e) {\n            }\n            setTimeout(function(){\n                try {\n                    e.target.classList.remove('animate');\n                } catch (e) {\n                }\n            },700);\n            setTimeout(function(){\n                try {\n                    props.onClick(e);\n                } catch (e) {\n                }\n            },500);\n\n        }} > {props.children}</button>\n    )\n}\n\nexport default RedBubbleButton;\n","import React from 'react'\nimport { useAlert } from 'react-alert'\n\nconst ShowErrorAlert = (props) => {\n    const alert = useAlert();\n    const {message} = props;\n    setTimeout(()=>{\n            alert.error(message);\n    },1);\n    return (\n        <div/>\n    )\n}\n\nexport default ShowErrorAlert;\n","import React from 'react'\nimport { useAlert } from 'react-alert'\n\nconst ShowSuccessAlert = (props) => {\n    const alert = useAlert();\n    const {message} = props;\n    setTimeout(()=>{\n            alert.success(message);\n    },1);\n    return (\n        <div/>\n    )\n}\n\nexport default ShowSuccessAlert;\n"],"sourceRoot":""}