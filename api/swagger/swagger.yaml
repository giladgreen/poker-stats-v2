swagger: "2.0"
info:
  version: "2.0.0"
  title: Poker Stats
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
  - text/html
paths:
  /swagger:
    x-swagger-pipe: swagger_raw

  /api/v2/notifications:
    x-swagger-router-controller: notifications
    post:
      operationId: registerNotifications
      parameters:
        - name: body
          in: body
          description: RegisterNotificationsRequestDefinition
          required: true
          schema:
            $ref: "#/definitions/RegisterNotificationsRequestDefinition"
      responses:
        201:
          description: RegisterNotificationsResponseDefinition
          schema:
            $ref: "#/definitions/RegisterNotificationsResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: unregisterNotifications
      responses:
        204:
          description: UnregisterNotificationsResponseDefinition
          schema:
            $ref: "#/definitions/UnregisterNotificationsResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /api/v2/groups:
    x-swagger-router-controller: groups
    parameters:
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Offset"
    get:
      operationId: getGroups
      responses:
        200:
          description: GetGroupsResponseDefinition
          schema:
            $ref: "#/definitions/GetGroupsResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: createGroup
      parameters:
        - name: body
          in: body
          description: The new group details
          required: true
          schema:
            $ref: "#/definitions/CreateGroupRequestDefinition"
      responses:
        201:
          description: createGroupResponseDefinition
          schema:
            $ref: "#/definitions/GroupDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/images:
    x-swagger-router-controller: images
    post:
      operationId: addImage
      parameters:
        - name: body
          in: body
          description: The new image data
          required: true
          schema:
            $ref: "#/definitions/CreateImageRequestDefinition"
      responses:
        201:
          description: ImageDefinition
          schema:
            $ref: "#/definitions/ImageDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/images/{imageId}:
    x-swagger-router-controller: images
    parameters:
      - $ref: '#/parameters/ImageId'
    delete:
      operationId: deleteImage
      responses:
        204:
          description: empty
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/keep-alive:
    x-swagger-router-controller: keepalive
    get:
      operationId: keepAlive
      responses:
        200:
          description: GroupDefinition
          schema:
            $ref: "#/definitions/KeepAliveResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/groups/{groupId}:
    x-swagger-router-controller: groups
    parameters:
      - $ref: '#/parameters/GroupId'
    get:
      operationId: getGroup
      responses:
        200:
          description: GroupDefinition
          schema:
            $ref: "#/definitions/GroupDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: updateGroup
      parameters:
        - name: body
          in: body
          description: The updated Group details
          required: true
          schema:
            $ref: "#/definitions/UpdateGroupRequestDefinition"
      responses:
        200:
          description: GroupDefinition
          schema:
            $ref: "#/definitions/GroupDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteGroup
      responses:
        204:
          description: EntityDeletedDefinition
          schema:
            $ref: "#/definitions/EntityDeletedDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/groups/{groupId}/players:
    x-swagger-router-controller: players
    parameters:
      - $ref: '#/parameters/GroupId'
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Offset"
    get:
      operationId: getPlayers
      responses:
        200:
          description: GetPlayersResponseDefinition
          schema:
            $ref: "#/definitions/GetPlayersResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: createPlayer
      parameters:
        - name: body
          in: body
          description: The new player details
          required: true
          schema:
            $ref: "#/definitions/CreatePlayerRequestDefinition"
      responses:
        201:
          description: PlayerDefinition
          schema:
            $ref: "#/definitions/PlayerDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/groups/{groupId}/images:
    x-swagger-router-controller: images
    parameters:
      - $ref: '#/parameters/GroupId'
    get:
      operationId: getGroupImages
      responses:
        200:
          description: GetGroupImagesResponseDefinition
          schema:
            $ref: "#/definitions/GetGroupImagesResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/groups/{groupId}/players/{playerId}:
    x-swagger-router-controller: players
    parameters:
      - $ref: '#/parameters/GroupId'
      - $ref: '#/parameters/PlayerId'
    get:
      operationId: getPlayer
      responses:
        200:
          description: PlayerDefinition
          schema:
            $ref: "#/definitions/PlayerDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: updatePlayer
      parameters:
        - name: body
          in: body
          description: The updated player details
          required: true
          schema:
            $ref: "#/definitions/UpdatePlayerRequestDefinition"
      responses:
        200:
          description: PlayerDefinition
          schema:
            $ref: "#/definitions/PlayerDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deletePlayer
      responses:
        204:
          description: EntityDeletedDefinition
          schema:
            $ref: "#/definitions/EntityDeletedDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/groups/{groupId}/games:
    x-swagger-router-controller: games
    parameters:
      - $ref: '#/parameters/GroupId'
      - $ref: "#/parameters/Limit"
      - $ref: "#/parameters/Offset"
    get:
      operationId: getGames
      responses:
        200:
          description: GetGamesResponseDefinition
          schema:
            $ref: "#/definitions/GetGamesResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: createGame
      parameters:
        - name: body
          in: body
          description: The new game details
          required: true
          schema:
            $ref: "#/definitions/CreateGameRequestDefinition"
      responses:
        201:
          description: GameDefinition
          schema:
            $ref: "#/definitions/GameDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/groups/{groupId}/games/{gameId}:
    x-swagger-router-controller: games
    parameters:
      - $ref: '#/parameters/GroupId'
      - $ref: '#/parameters/GameId'
    get:
      operationId: getGame
      responses:
        200:
          description: GameDefinition
          schema:
            $ref: "#/definitions/GameDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      operationId: updateGame
      parameters:
        - name: body
          in: body
          description: The updated Game details
          required: true
          schema:
            $ref: "#/definitions/UpdateGameRequestDefinition"
      responses:
        200:
          description: GameDefinition
          schema:
            $ref: "#/definitions/GameDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteGame
      responses:
        204:
          description: EntityDeletedDefinition
          schema:
            $ref: "#/definitions/EntityDeletedDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/invitations-requests:
    x-swagger-router-controller: invitation
    post:
      operationId: createInvitationRequest
      parameters:
        - name: body
          in: body
          description: the invitation request data
          required: true
          schema:
            $ref: "#/definitions/CreateInvitationRequestDefinition"
      responses:
        201:
          description: InvitationRequestResponseDefinition
          schema:
            $ref: "#/definitions/InvitationRequestResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v2/invitations-requests/{invitationRequestId}:
    x-swagger-router-controller: invitation
    parameters:
      - $ref: '#/parameters/InvitationRequestId'
      - $ref: '#/parameters/Approved'
      - $ref: '#/parameters/SetAsAdmin'
    get:
      operationId: answerInvitationRequest
      responses:
        200:
          description: InvitationRequestAnswerResponseDefinition
          schema:
            $ref: "#/definitions/InvitationRequestAnswerResponseDefinition"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  PaginationDefinition:
    properties:
      totalResults:
        type: integer
      count:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
  EntityDeletedDefinition:
    properties:
      deleted:
        type: boolean
  ErrorResponse:
    required:
      - title
    properties:
      title:
        type: string
      detail:
        type: string
  GroupDefinition:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      createdAt:
        type: string
      userInGroup:
        type: boolean
      isAdmin:
        type: boolean
  PlayerGameDataDefinition:
    type: object
    properties:
      playerId:
        type: string
      buyIn:
        type: integer
      cashOut:
        type: integer
      updatedAt:
        type: string
  GameDefinition:
    type: object
    properties:
      id:
        type: string
      description:
        type: string
      date:
        type: string
      playersData:
        type: array
        items:
          $ref: "#/definitions/PlayerGameDataDefinition"
      groupId:
        type: string
      createdAt:
        type: string
  PlayerDefinition:
    type: object
    properties:
      id:
        type: string
      groupId:
        type: string
      name:
        type: string
      createdAt:
        type: string
  InvitationRequestResponseDefinition:
    type: object
    properties:
      status:
        type: string
      invitationRequestId:
        type: string
  InvitationRequestAnswerResponseDefinition:
    type: object
    properties:
      status:
        type: string
  GetGroupsResponseDefinition:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/PaginationDefinition'
      results:
        type: array
        items:
          $ref: "#/definitions/GroupDefinition"
  GetGamesResponseDefinition:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/PaginationDefinition'
      results:
        type: array
        items:
          $ref: "#/definitions/GameDefinition"
  GetPlayersResponseDefinition:
    type: object
    properties:
      metadata:
        $ref: '#/definitions/PaginationDefinition'
      results:
        type: array
        items:
          $ref: "#/definitions/PlayerDefinition"
  GetGroupImagesResponseDefinition:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: "#/definitions/ImageDefinition"
  CreateGroupRequestDefinition:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  UpdateGroupRequestDefinition:
    type: object
    properties:
      name:
        type: string
  CreateGameRequestDefinition:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      playersData:
        type: array
        items:
          $ref: "#/definitions/PlayerGameDataDefinition"
  CreateInvitationRequestDefinition:
    type: object
    properties:
      groupId:
        type: string
  KeepAliveResponseDefinition:
    type: object
    properties:
      status:
        type: string
  UpdateGameRequestDefinition:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      playersData:
        type: array
        items:
          $ref: "#/definitions/PlayerGameDataDefinition"
  CreatePlayerRequestDefinition:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      email:
        type: string
      birthday:
        type: string
  UpdatePlayerRequestDefinition:
    type: object
    properties:
      name:
        type: string
  RegisterNotificationsRequestDefinition:
    type: object
  RegisterNotificationsResponseDefinition:
    type: object
  UnregisterNotificationsResponseDefinition:
    type: object
  CreateImageRequestDefinition:
    type: object
    required:
      - image
    properties:
      image:
        type: string
      playerIds:
        type: array
        items:
          type: string
      gameIds:
        type: array
        items:
          type: string
      groupIds:
        type: array
        items:
          type: string
  ImageDefinition:
    type: object
    properties:
      uploadedByName:
        type: string
      uploadedById:
        type: string
      imageId:
        type: string
      image:
        type: string
      playerIds:
        type: array
        items:
          type: string
      gameIds:
        type: array
        items:
          type: string
      groupIds:
        type: array
        items:
          type: string

parameters:
  GroupId:
    name: groupId
    in: path
    description: The id of the group (uuid)
    required: true
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
  ImageId:
    name: imageId
    in: path
    description: The id of the image
    required: true
    type: string
  PlayerId:
    name: playerId
    in: path
    description: The id of the player (uuid)
    required: true
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
  GameId:
    name: gameId
    in: path
    description: The id of the game (uuid)
    required: true
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
  Limit:
    name: limit
    description: The number of records you would like to get
    required: false
    default: 1000
    maximum: 1000
    in: query
    type: integer
  Offset:
    name: offset
    description: From which record should it retrieve your data? (starting point for limit)
    default: 0
    required: false
    in: query
    type: integer
  InvitationRequestId:
    name: invitationRequestId
    in: path
    description: The id of the Invitations Request (uuid)
    required: true
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
  Approved:
    name: approved
    description: whether or not the request is approved
    default: false
    required: true
    in: query
    type: boolean
  SetAsAdmin:
    name: setAsAdmin
    description: whether or not the user will be admin
    default: false
    required: true
    in: query
    type: boolean

